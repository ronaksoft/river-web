/* eslint-disable */
// source: chat.messages.medias.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var core_types_pb = require('./core.types_pb.js');
goog.object.extend(proto, core_types_pb);
goog.exportSymbol('proto.msg.Document', null, global);
goog.exportSymbol('proto.msg.DocumentAttribute', null, global);
goog.exportSymbol('proto.msg.DocumentAttributeAnimated', null, global);
goog.exportSymbol('proto.msg.DocumentAttributeAudio', null, global);
goog.exportSymbol('proto.msg.DocumentAttributeFile', null, global);
goog.exportSymbol('proto.msg.DocumentAttributePhoto', null, global);
goog.exportSymbol('proto.msg.DocumentAttributeType', null, global);
goog.exportSymbol('proto.msg.DocumentAttributeVideo', null, global);
goog.exportSymbol('proto.msg.DocumentAttributeVoiceCall', null, global);
goog.exportSymbol('proto.msg.DocumentType', null, global);
goog.exportSymbol('proto.msg.InputMediaContact', null, global);
goog.exportSymbol('proto.msg.InputMediaDocument', null, global);
goog.exportSymbol('proto.msg.InputMediaGeoLocation', null, global);
goog.exportSymbol('proto.msg.InputMediaMessageDocument', null, global);
goog.exportSymbol('proto.msg.InputMediaPoll', null, global);
goog.exportSymbol('proto.msg.InputMediaUploadedDocument', null, global);
goog.exportSymbol('proto.msg.InputMediaWebDocument', null, global);
goog.exportSymbol('proto.msg.MediaContact', null, global);
goog.exportSymbol('proto.msg.MediaDocument', null, global);
goog.exportSymbol('proto.msg.MediaGeoLocation', null, global);
goog.exportSymbol('proto.msg.MediaPoll', null, global);
goog.exportSymbol('proto.msg.MediaWebDocument', null, global);
goog.exportSymbol('proto.msg.MediaWebPage', null, global);
goog.exportSymbol('proto.msg.PollAnswer', null, global);
goog.exportSymbol('proto.msg.PollAnswerVoters', null, global);
goog.exportSymbol('proto.msg.PollResults', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.DocumentAttributeVoiceCall = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.DocumentAttributeVoiceCall, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.DocumentAttributeVoiceCall.displayName = 'proto.msg.DocumentAttributeVoiceCall';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.DocumentAttributeAudio = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.DocumentAttributeAudio, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.DocumentAttributeAudio.displayName = 'proto.msg.DocumentAttributeAudio';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.DocumentAttributeVideo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.DocumentAttributeVideo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.DocumentAttributeVideo.displayName = 'proto.msg.DocumentAttributeVideo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.DocumentAttributePhoto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.DocumentAttributePhoto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.DocumentAttributePhoto.displayName = 'proto.msg.DocumentAttributePhoto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.DocumentAttributeFile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.DocumentAttributeFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.DocumentAttributeFile.displayName = 'proto.msg.DocumentAttributeFile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.DocumentAttributeAnimated = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.DocumentAttributeAnimated, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.DocumentAttributeAnimated.displayName = 'proto.msg.DocumentAttributeAnimated';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.DocumentAttribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.DocumentAttribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.DocumentAttribute.displayName = 'proto.msg.DocumentAttribute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.Document = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.Document.repeatedFields_, null);
};
goog.inherits(proto.msg.Document, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.Document.displayName = 'proto.msg.Document';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.InputMediaWebDocument = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.InputMediaWebDocument.repeatedFields_, null);
};
goog.inherits(proto.msg.InputMediaWebDocument, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.InputMediaWebDocument.displayName = 'proto.msg.InputMediaWebDocument';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MediaWebDocument = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.MediaWebDocument.repeatedFields_, null);
};
goog.inherits(proto.msg.MediaWebDocument, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MediaWebDocument.displayName = 'proto.msg.MediaWebDocument';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MediaWebPage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MediaWebPage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MediaWebPage.displayName = 'proto.msg.MediaWebPage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.InputMediaContact = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.InputMediaContact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.InputMediaContact.displayName = 'proto.msg.InputMediaContact';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MediaContact = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.MediaContact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MediaContact.displayName = 'proto.msg.MediaContact';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.InputMediaUploadedDocument = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.InputMediaUploadedDocument.repeatedFields_, null);
};
goog.inherits(proto.msg.InputMediaUploadedDocument, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.InputMediaUploadedDocument.displayName = 'proto.msg.InputMediaUploadedDocument';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.InputMediaDocument = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.InputMediaDocument.repeatedFields_, null);
};
goog.inherits(proto.msg.InputMediaDocument, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.InputMediaDocument.displayName = 'proto.msg.InputMediaDocument';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.InputMediaMessageDocument = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.InputMediaMessageDocument.repeatedFields_, null);
};
goog.inherits(proto.msg.InputMediaMessageDocument, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.InputMediaMessageDocument.displayName = 'proto.msg.InputMediaMessageDocument';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MediaDocument = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.MediaDocument.repeatedFields_, null);
};
goog.inherits(proto.msg.MediaDocument, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MediaDocument.displayName = 'proto.msg.MediaDocument';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.InputMediaGeoLocation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.InputMediaGeoLocation.repeatedFields_, null);
};
goog.inherits(proto.msg.InputMediaGeoLocation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.InputMediaGeoLocation.displayName = 'proto.msg.InputMediaGeoLocation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MediaGeoLocation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.MediaGeoLocation.repeatedFields_, null);
};
goog.inherits(proto.msg.MediaGeoLocation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MediaGeoLocation.displayName = 'proto.msg.MediaGeoLocation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.InputMediaPoll = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.InputMediaPoll, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.InputMediaPoll.displayName = 'proto.msg.InputMediaPoll';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.MediaPoll = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.MediaPoll.repeatedFields_, null);
};
goog.inherits(proto.msg.MediaPoll, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.MediaPoll.displayName = 'proto.msg.MediaPoll';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.PollAnswer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.PollAnswer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.PollAnswer.displayName = 'proto.msg.PollAnswer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.PollResults = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.PollResults.repeatedFields_, null);
};
goog.inherits(proto.msg.PollResults, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.PollResults.displayName = 'proto.msg.PollResults';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.PollAnswerVoters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.PollAnswerVoters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.PollAnswerVoters.displayName = 'proto.msg.PollAnswerVoters';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.DocumentAttributeVoiceCall.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.DocumentAttributeVoiceCall.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.DocumentAttributeVoiceCall} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.DocumentAttributeVoiceCall.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxcallattempts: jspb.Message.getFieldWithDefault(msg, 1, 0),
    callattemptsleep: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.DocumentAttributeVoiceCall}
 */
proto.msg.DocumentAttributeVoiceCall.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.DocumentAttributeVoiceCall;
  return proto.msg.DocumentAttributeVoiceCall.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.DocumentAttributeVoiceCall} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.DocumentAttributeVoiceCall}
 */
proto.msg.DocumentAttributeVoiceCall.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxcallattempts(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCallattemptsleep(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.DocumentAttributeVoiceCall.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.DocumentAttributeVoiceCall.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.DocumentAttributeVoiceCall} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.DocumentAttributeVoiceCall.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxcallattempts();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getCallattemptsleep();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 MaxCallAttempts = 1;
 * @return {number}
 */
proto.msg.DocumentAttributeVoiceCall.prototype.getMaxcallattempts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.DocumentAttributeVoiceCall} returns this
 */
proto.msg.DocumentAttributeVoiceCall.prototype.setMaxcallattempts = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 CallAttemptSleep = 2;
 * @return {number}
 */
proto.msg.DocumentAttributeVoiceCall.prototype.getCallattemptsleep = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.DocumentAttributeVoiceCall} returns this
 */
proto.msg.DocumentAttributeVoiceCall.prototype.setCallattemptsleep = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.DocumentAttributeAudio.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.DocumentAttributeAudio.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.DocumentAttributeAudio} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.DocumentAttributeAudio.toObject = function(includeInstance, msg) {
  var f, obj = {
    voice: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    duration: jspb.Message.getFieldWithDefault(msg, 2, 0),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    performer: jspb.Message.getFieldWithDefault(msg, 4, ""),
    album: jspb.Message.getFieldWithDefault(msg, 5, ""),
    waveform: msg.getWaveform_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.DocumentAttributeAudio}
 */
proto.msg.DocumentAttributeAudio.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.DocumentAttributeAudio;
  return proto.msg.DocumentAttributeAudio.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.DocumentAttributeAudio} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.DocumentAttributeAudio}
 */
proto.msg.DocumentAttributeAudio.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVoice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDuration(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPerformer(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlbum(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setWaveform(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.DocumentAttributeAudio.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.DocumentAttributeAudio.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.DocumentAttributeAudio} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.DocumentAttributeAudio.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVoice();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPerformer();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAlbum();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getWaveform_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
};


/**
 * optional bool Voice = 1;
 * @return {boolean}
 */
proto.msg.DocumentAttributeAudio.prototype.getVoice = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.DocumentAttributeAudio} returns this
 */
proto.msg.DocumentAttributeAudio.prototype.setVoice = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional uint32 Duration = 2;
 * @return {number}
 */
proto.msg.DocumentAttributeAudio.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.DocumentAttributeAudio} returns this
 */
proto.msg.DocumentAttributeAudio.prototype.setDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Title = 3;
 * @return {string}
 */
proto.msg.DocumentAttributeAudio.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.DocumentAttributeAudio} returns this
 */
proto.msg.DocumentAttributeAudio.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Performer = 4;
 * @return {string}
 */
proto.msg.DocumentAttributeAudio.prototype.getPerformer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.DocumentAttributeAudio} returns this
 */
proto.msg.DocumentAttributeAudio.prototype.setPerformer = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Album = 5;
 * @return {string}
 */
proto.msg.DocumentAttributeAudio.prototype.getAlbum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.DocumentAttributeAudio} returns this
 */
proto.msg.DocumentAttributeAudio.prototype.setAlbum = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bytes Waveform = 6;
 * @return {!(string|Uint8Array)}
 */
proto.msg.DocumentAttributeAudio.prototype.getWaveform = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes Waveform = 6;
 * This is a type-conversion wrapper around `getWaveform()`
 * @return {string}
 */
proto.msg.DocumentAttributeAudio.prototype.getWaveform_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getWaveform()));
};


/**
 * optional bytes Waveform = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getWaveform()`
 * @return {!Uint8Array}
 */
proto.msg.DocumentAttributeAudio.prototype.getWaveform_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getWaveform()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.msg.DocumentAttributeAudio} returns this
 */
proto.msg.DocumentAttributeAudio.prototype.setWaveform = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.DocumentAttributeVideo.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.DocumentAttributeVideo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.DocumentAttributeVideo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.DocumentAttributeVideo.toObject = function(includeInstance, msg) {
  var f, obj = {
    width: jspb.Message.getFieldWithDefault(msg, 1, 0),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0),
    duration: jspb.Message.getFieldWithDefault(msg, 3, 0),
    round: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.DocumentAttributeVideo}
 */
proto.msg.DocumentAttributeVideo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.DocumentAttributeVideo;
  return proto.msg.DocumentAttributeVideo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.DocumentAttributeVideo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.DocumentAttributeVideo}
 */
proto.msg.DocumentAttributeVideo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWidth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeight(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDuration(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRound(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.DocumentAttributeVideo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.DocumentAttributeVideo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.DocumentAttributeVideo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.DocumentAttributeVideo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWidth();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getRound();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional uint32 Width = 1;
 * @return {number}
 */
proto.msg.DocumentAttributeVideo.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.DocumentAttributeVideo} returns this
 */
proto.msg.DocumentAttributeVideo.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Height = 2;
 * @return {number}
 */
proto.msg.DocumentAttributeVideo.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.DocumentAttributeVideo} returns this
 */
proto.msg.DocumentAttributeVideo.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 Duration = 3;
 * @return {number}
 */
proto.msg.DocumentAttributeVideo.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.DocumentAttributeVideo} returns this
 */
proto.msg.DocumentAttributeVideo.prototype.setDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool Round = 4;
 * @return {boolean}
 */
proto.msg.DocumentAttributeVideo.prototype.getRound = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.DocumentAttributeVideo} returns this
 */
proto.msg.DocumentAttributeVideo.prototype.setRound = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.DocumentAttributePhoto.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.DocumentAttributePhoto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.DocumentAttributePhoto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.DocumentAttributePhoto.toObject = function(includeInstance, msg) {
  var f, obj = {
    width: jspb.Message.getFieldWithDefault(msg, 1, 0),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.DocumentAttributePhoto}
 */
proto.msg.DocumentAttributePhoto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.DocumentAttributePhoto;
  return proto.msg.DocumentAttributePhoto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.DocumentAttributePhoto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.DocumentAttributePhoto}
 */
proto.msg.DocumentAttributePhoto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWidth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.DocumentAttributePhoto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.DocumentAttributePhoto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.DocumentAttributePhoto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.DocumentAttributePhoto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWidth();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 Width = 1;
 * @return {number}
 */
proto.msg.DocumentAttributePhoto.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.DocumentAttributePhoto} returns this
 */
proto.msg.DocumentAttributePhoto.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Height = 2;
 * @return {number}
 */
proto.msg.DocumentAttributePhoto.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.DocumentAttributePhoto} returns this
 */
proto.msg.DocumentAttributePhoto.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.DocumentAttributeFile.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.DocumentAttributeFile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.DocumentAttributeFile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.DocumentAttributeFile.toObject = function(includeInstance, msg) {
  var f, obj = {
    filename: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.DocumentAttributeFile}
 */
proto.msg.DocumentAttributeFile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.DocumentAttributeFile;
  return proto.msg.DocumentAttributeFile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.DocumentAttributeFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.DocumentAttributeFile}
 */
proto.msg.DocumentAttributeFile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilename(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.DocumentAttributeFile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.DocumentAttributeFile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.DocumentAttributeFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.DocumentAttributeFile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilename();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string Filename = 1;
 * @return {string}
 */
proto.msg.DocumentAttributeFile.prototype.getFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.DocumentAttributeFile} returns this
 */
proto.msg.DocumentAttributeFile.prototype.setFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.DocumentAttributeAnimated.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.DocumentAttributeAnimated.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.DocumentAttributeAnimated} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.DocumentAttributeAnimated.toObject = function(includeInstance, msg) {
  var f, obj = {
    sound: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.DocumentAttributeAnimated}
 */
proto.msg.DocumentAttributeAnimated.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.DocumentAttributeAnimated;
  return proto.msg.DocumentAttributeAnimated.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.DocumentAttributeAnimated} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.DocumentAttributeAnimated}
 */
proto.msg.DocumentAttributeAnimated.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSound(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.DocumentAttributeAnimated.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.DocumentAttributeAnimated.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.DocumentAttributeAnimated} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.DocumentAttributeAnimated.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSound();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool Sound = 1;
 * @return {boolean}
 */
proto.msg.DocumentAttributeAnimated.prototype.getSound = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.DocumentAttributeAnimated} returns this
 */
proto.msg.DocumentAttributeAnimated.prototype.setSound = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.DocumentAttribute.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.DocumentAttribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.DocumentAttribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.DocumentAttribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.DocumentAttribute}
 */
proto.msg.DocumentAttribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.DocumentAttribute;
  return proto.msg.DocumentAttribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.DocumentAttribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.DocumentAttribute}
 */
proto.msg.DocumentAttribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.msg.DocumentAttributeType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.DocumentAttribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.DocumentAttribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.DocumentAttribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.DocumentAttribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional DocumentAttributeType Type = 1;
 * @return {!proto.msg.DocumentAttributeType}
 */
proto.msg.DocumentAttribute.prototype.getType = function() {
  return /** @type {!proto.msg.DocumentAttributeType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.msg.DocumentAttributeType} value
 * @return {!proto.msg.DocumentAttribute} returns this
 */
proto.msg.DocumentAttribute.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bytes Data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.msg.DocumentAttribute.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes Data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.msg.DocumentAttribute.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes Data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.msg.DocumentAttribute.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.msg.DocumentAttribute} returns this
 */
proto.msg.DocumentAttribute.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.Document.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.Document.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.Document.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.Document} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.Document.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    accesshash: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    date: jspb.Message.getFieldWithDefault(msg, 3, 0),
    mimetype: jspb.Message.getFieldWithDefault(msg, 4, ""),
    filesize: jspb.Message.getFieldWithDefault(msg, 5, 0),
    version: jspb.Message.getFieldWithDefault(msg, 6, 0),
    clusterid: jspb.Message.getFieldWithDefault(msg, 7, 0),
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.msg.DocumentAttribute.toObject, includeInstance),
    thumbnail: (f = msg.getThumbnail()) && core_types_pb.FileLocation.toObject(includeInstance, f),
    md5checksum: jspb.Message.getFieldWithDefault(msg, 10, ""),
    tinythumbnail: msg.getTinythumbnail_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.Document}
 */
proto.msg.Document.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.Document;
  return proto.msg.Document.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.Document} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.Document}
 */
proto.msg.Document.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readFixed64String());
      msg.setAccesshash(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMimetype(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFilesize(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setClusterid(value);
      break;
    case 8:
      var value = new proto.msg.DocumentAttribute;
      reader.readMessage(value,proto.msg.DocumentAttribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    case 9:
      var value = new core_types_pb.FileLocation;
      reader.readMessage(value,core_types_pb.FileLocation.deserializeBinaryFromReader);
      msg.setThumbnail(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMd5checksum(value);
      break;
    case 11:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTinythumbnail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.Document.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.Document.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.Document} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.Document.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getAccesshash();
  if (parseInt(f, 10) !== 0) {
    writer.writeFixed64String(
      2,
      f
    );
  }
  f = message.getDate();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getMimetype();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFilesize();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getClusterid();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.msg.DocumentAttribute.serializeBinaryToWriter
    );
  }
  f = message.getThumbnail();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      core_types_pb.FileLocation.serializeBinaryToWriter
    );
  }
  f = message.getMd5checksum();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getTinythumbnail_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      11,
      f
    );
  }
};


/**
 * optional int64 ID = 1;
 * @return {string}
 */
proto.msg.Document.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.msg.Document} returns this
 */
proto.msg.Document.prototype.setId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional fixed64 AccessHash = 2;
 * @return {string}
 */
proto.msg.Document.prototype.getAccesshash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.msg.Document} returns this
 */
proto.msg.Document.prototype.setAccesshash = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional int64 Date = 3;
 * @return {number}
 */
proto.msg.Document.prototype.getDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.Document} returns this
 */
proto.msg.Document.prototype.setDate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string MimeType = 4;
 * @return {string}
 */
proto.msg.Document.prototype.getMimetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.Document} returns this
 */
proto.msg.Document.prototype.setMimetype = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 FileSize = 5;
 * @return {number}
 */
proto.msg.Document.prototype.getFilesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.Document} returns this
 */
proto.msg.Document.prototype.setFilesize = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 Version = 6;
 * @return {number}
 */
proto.msg.Document.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.Document} returns this
 */
proto.msg.Document.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 ClusterID = 7;
 * @return {number}
 */
proto.msg.Document.prototype.getClusterid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.Document} returns this
 */
proto.msg.Document.prototype.setClusterid = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated DocumentAttribute Attributes = 8;
 * @return {!Array<!proto.msg.DocumentAttribute>}
 */
proto.msg.Document.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.msg.DocumentAttribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msg.DocumentAttribute, 8));
};


/**
 * @param {!Array<!proto.msg.DocumentAttribute>} value
 * @return {!proto.msg.Document} returns this
*/
proto.msg.Document.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.msg.DocumentAttribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.DocumentAttribute}
 */
proto.msg.Document.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.msg.DocumentAttribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.Document} returns this
 */
proto.msg.Document.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};


/**
 * optional FileLocation Thumbnail = 9;
 * @return {?proto.msg.FileLocation}
 */
proto.msg.Document.prototype.getThumbnail = function() {
  return /** @type{?proto.msg.FileLocation} */ (
    jspb.Message.getWrapperField(this, core_types_pb.FileLocation, 9));
};


/**
 * @param {?proto.msg.FileLocation|undefined} value
 * @return {!proto.msg.Document} returns this
*/
proto.msg.Document.prototype.setThumbnail = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.Document} returns this
 */
proto.msg.Document.prototype.clearThumbnail = function() {
  return this.setThumbnail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.Document.prototype.hasThumbnail = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string MD5Checksum = 10;
 * @return {string}
 */
proto.msg.Document.prototype.getMd5checksum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.Document} returns this
 */
proto.msg.Document.prototype.setMd5checksum = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bytes TinyThumbnail = 11;
 * @return {!(string|Uint8Array)}
 */
proto.msg.Document.prototype.getTinythumbnail = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * optional bytes TinyThumbnail = 11;
 * This is a type-conversion wrapper around `getTinythumbnail()`
 * @return {string}
 */
proto.msg.Document.prototype.getTinythumbnail_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTinythumbnail()));
};


/**
 * optional bytes TinyThumbnail = 11;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTinythumbnail()`
 * @return {!Uint8Array}
 */
proto.msg.Document.prototype.getTinythumbnail_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTinythumbnail()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.msg.Document} returns this
 */
proto.msg.Document.prototype.setTinythumbnail = function(value) {
  return jspb.Message.setProto3BytesField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.InputMediaWebDocument.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.InputMediaWebDocument.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.InputMediaWebDocument.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.InputMediaWebDocument} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.InputMediaWebDocument.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    docsize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    mimetype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.msg.DocumentAttribute.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.InputMediaWebDocument}
 */
proto.msg.InputMediaWebDocument.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.InputMediaWebDocument;
  return proto.msg.InputMediaWebDocument.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.InputMediaWebDocument} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.InputMediaWebDocument}
 */
proto.msg.InputMediaWebDocument.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDocsize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMimetype(value);
      break;
    case 4:
      var value = new proto.msg.DocumentAttribute;
      reader.readMessage(value,proto.msg.DocumentAttribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.InputMediaWebDocument.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.InputMediaWebDocument.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.InputMediaWebDocument} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.InputMediaWebDocument.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDocsize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMimetype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.msg.DocumentAttribute.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Url = 1;
 * @return {string}
 */
proto.msg.InputMediaWebDocument.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.InputMediaWebDocument} returns this
 */
proto.msg.InputMediaWebDocument.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 DocSize = 2;
 * @return {number}
 */
proto.msg.InputMediaWebDocument.prototype.getDocsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.InputMediaWebDocument} returns this
 */
proto.msg.InputMediaWebDocument.prototype.setDocsize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string MimeType = 3;
 * @return {string}
 */
proto.msg.InputMediaWebDocument.prototype.getMimetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.InputMediaWebDocument} returns this
 */
proto.msg.InputMediaWebDocument.prototype.setMimetype = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated DocumentAttribute Attributes = 4;
 * @return {!Array<!proto.msg.DocumentAttribute>}
 */
proto.msg.InputMediaWebDocument.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.msg.DocumentAttribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msg.DocumentAttribute, 4));
};


/**
 * @param {!Array<!proto.msg.DocumentAttribute>} value
 * @return {!proto.msg.InputMediaWebDocument} returns this
*/
proto.msg.InputMediaWebDocument.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.msg.DocumentAttribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.DocumentAttribute}
 */
proto.msg.InputMediaWebDocument.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.msg.DocumentAttribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.InputMediaWebDocument} returns this
 */
proto.msg.InputMediaWebDocument.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.MediaWebDocument.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MediaWebDocument.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MediaWebDocument.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MediaWebDocument} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MediaWebDocument.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    docsize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    mimetype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.msg.DocumentAttribute.toObject, includeInstance),
    accesshash: jspb.Message.getFieldWithDefault(msg, 5, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MediaWebDocument}
 */
proto.msg.MediaWebDocument.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MediaWebDocument;
  return proto.msg.MediaWebDocument.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MediaWebDocument} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MediaWebDocument}
 */
proto.msg.MediaWebDocument.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDocsize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMimetype(value);
      break;
    case 4:
      var value = new proto.msg.DocumentAttribute;
      reader.readMessage(value,proto.msg.DocumentAttribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readFixed64String());
      msg.setAccesshash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MediaWebDocument.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MediaWebDocument.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MediaWebDocument} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MediaWebDocument.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDocsize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMimetype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.msg.DocumentAttribute.serializeBinaryToWriter
    );
  }
  f = message.getAccesshash();
  if (parseInt(f, 10) !== 0) {
    writer.writeFixed64String(
      5,
      f
    );
  }
};


/**
 * optional string Url = 1;
 * @return {string}
 */
proto.msg.MediaWebDocument.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.MediaWebDocument} returns this
 */
proto.msg.MediaWebDocument.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 DocSize = 2;
 * @return {number}
 */
proto.msg.MediaWebDocument.prototype.getDocsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MediaWebDocument} returns this
 */
proto.msg.MediaWebDocument.prototype.setDocsize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string MimeType = 3;
 * @return {string}
 */
proto.msg.MediaWebDocument.prototype.getMimetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.MediaWebDocument} returns this
 */
proto.msg.MediaWebDocument.prototype.setMimetype = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated DocumentAttribute Attributes = 4;
 * @return {!Array<!proto.msg.DocumentAttribute>}
 */
proto.msg.MediaWebDocument.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.msg.DocumentAttribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msg.DocumentAttribute, 4));
};


/**
 * @param {!Array<!proto.msg.DocumentAttribute>} value
 * @return {!proto.msg.MediaWebDocument} returns this
*/
proto.msg.MediaWebDocument.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.msg.DocumentAttribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.DocumentAttribute}
 */
proto.msg.MediaWebDocument.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.msg.DocumentAttribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MediaWebDocument} returns this
 */
proto.msg.MediaWebDocument.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};


/**
 * optional fixed64 AccessHash = 5;
 * @return {string}
 */
proto.msg.MediaWebDocument.prototype.getAccesshash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, "0"));
};


/**
 * @param {string} value
 * @return {!proto.msg.MediaWebDocument} returns this
 */
proto.msg.MediaWebDocument.prototype.setAccesshash = function(value) {
  return jspb.Message.setProto3StringIntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MediaWebPage.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MediaWebPage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MediaWebPage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MediaWebPage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MediaWebPage}
 */
proto.msg.MediaWebPage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MediaWebPage;
  return proto.msg.MediaWebPage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MediaWebPage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MediaWebPage}
 */
proto.msg.MediaWebPage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MediaWebPage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MediaWebPage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MediaWebPage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MediaWebPage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.InputMediaContact.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.InputMediaContact.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.InputMediaContact} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.InputMediaContact.toObject = function(includeInstance, msg) {
  var f, obj = {
    phone: jspb.Message.getFieldWithDefault(msg, 1, ""),
    firstname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    vcard: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.InputMediaContact}
 */
proto.msg.InputMediaContact.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.InputMediaContact;
  return proto.msg.InputMediaContact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.InputMediaContact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.InputMediaContact}
 */
proto.msg.InputMediaContact.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVcard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.InputMediaContact.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.InputMediaContact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.InputMediaContact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.InputMediaContact.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVcard();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string Phone = 1;
 * @return {string}
 */
proto.msg.InputMediaContact.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.InputMediaContact} returns this
 */
proto.msg.InputMediaContact.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string FirstName = 2;
 * @return {string}
 */
proto.msg.InputMediaContact.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.InputMediaContact} returns this
 */
proto.msg.InputMediaContact.prototype.setFirstname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string LastName = 3;
 * @return {string}
 */
proto.msg.InputMediaContact.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.InputMediaContact} returns this
 */
proto.msg.InputMediaContact.prototype.setLastname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string VCard = 4;
 * @return {string}
 */
proto.msg.InputMediaContact.prototype.getVcard = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.InputMediaContact} returns this
 */
proto.msg.InputMediaContact.prototype.setVcard = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MediaContact.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MediaContact.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MediaContact} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MediaContact.toObject = function(includeInstance, msg) {
  var f, obj = {
    phone: jspb.Message.getFieldWithDefault(msg, 1, ""),
    firstname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    vcard: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MediaContact}
 */
proto.msg.MediaContact.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MediaContact;
  return proto.msg.MediaContact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MediaContact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MediaContact}
 */
proto.msg.MediaContact.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVcard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MediaContact.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MediaContact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MediaContact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MediaContact.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVcard();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string Phone = 1;
 * @return {string}
 */
proto.msg.MediaContact.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.MediaContact} returns this
 */
proto.msg.MediaContact.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string FirstName = 2;
 * @return {string}
 */
proto.msg.MediaContact.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.MediaContact} returns this
 */
proto.msg.MediaContact.prototype.setFirstname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string LastName = 3;
 * @return {string}
 */
proto.msg.MediaContact.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.MediaContact} returns this
 */
proto.msg.MediaContact.prototype.setLastname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string VCard = 4;
 * @return {string}
 */
proto.msg.MediaContact.prototype.getVcard = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.MediaContact} returns this
 */
proto.msg.MediaContact.prototype.setVcard = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.InputMediaUploadedDocument.repeatedFields_ = [5,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.InputMediaUploadedDocument.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.InputMediaUploadedDocument.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.InputMediaUploadedDocument} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.InputMediaUploadedDocument.toObject = function(includeInstance, msg) {
  var f, obj = {
    file: (f = msg.getFile()) && core_types_pb.InputFile.toObject(includeInstance, f),
    thumbnail: (f = msg.getThumbnail()) && core_types_pb.InputFile.toObject(includeInstance, f),
    mimetype: jspb.Message.getFieldWithDefault(msg, 3, ""),
    caption: jspb.Message.getFieldWithDefault(msg, 4, ""),
    stickersList: jspb.Message.toObjectList(msg.getStickersList(),
    core_types_pb.InputDocument.toObject, includeInstance),
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.msg.DocumentAttribute.toObject, includeInstance),
    entitiesList: jspb.Message.toObjectList(msg.getEntitiesList(),
    core_types_pb.MessageEntity.toObject, includeInstance),
    tinythumbnail: msg.getTinythumbnail_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.InputMediaUploadedDocument}
 */
proto.msg.InputMediaUploadedDocument.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.InputMediaUploadedDocument;
  return proto.msg.InputMediaUploadedDocument.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.InputMediaUploadedDocument} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.InputMediaUploadedDocument}
 */
proto.msg.InputMediaUploadedDocument.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new core_types_pb.InputFile;
      reader.readMessage(value,core_types_pb.InputFile.deserializeBinaryFromReader);
      msg.setFile(value);
      break;
    case 2:
      var value = new core_types_pb.InputFile;
      reader.readMessage(value,core_types_pb.InputFile.deserializeBinaryFromReader);
      msg.setThumbnail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMimetype(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 5:
      var value = new core_types_pb.InputDocument;
      reader.readMessage(value,core_types_pb.InputDocument.deserializeBinaryFromReader);
      msg.addStickers(value);
      break;
    case 6:
      var value = new proto.msg.DocumentAttribute;
      reader.readMessage(value,proto.msg.DocumentAttribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    case 7:
      var value = new core_types_pb.MessageEntity;
      reader.readMessage(value,core_types_pb.MessageEntity.deserializeBinaryFromReader);
      msg.addEntities(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTinythumbnail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.InputMediaUploadedDocument.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.InputMediaUploadedDocument.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.InputMediaUploadedDocument} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.InputMediaUploadedDocument.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFile();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      core_types_pb.InputFile.serializeBinaryToWriter
    );
  }
  f = message.getThumbnail();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      core_types_pb.InputFile.serializeBinaryToWriter
    );
  }
  f = message.getMimetype();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStickersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      core_types_pb.InputDocument.serializeBinaryToWriter
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.msg.DocumentAttribute.serializeBinaryToWriter
    );
  }
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      core_types_pb.MessageEntity.serializeBinaryToWriter
    );
  }
  f = message.getTinythumbnail_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      8,
      f
    );
  }
};


/**
 * optional InputFile File = 1;
 * @return {?proto.msg.InputFile}
 */
proto.msg.InputMediaUploadedDocument.prototype.getFile = function() {
  return /** @type{?proto.msg.InputFile} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputFile, 1));
};


/**
 * @param {?proto.msg.InputFile|undefined} value
 * @return {!proto.msg.InputMediaUploadedDocument} returns this
*/
proto.msg.InputMediaUploadedDocument.prototype.setFile = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.InputMediaUploadedDocument} returns this
 */
proto.msg.InputMediaUploadedDocument.prototype.clearFile = function() {
  return this.setFile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.InputMediaUploadedDocument.prototype.hasFile = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional InputFile Thumbnail = 2;
 * @return {?proto.msg.InputFile}
 */
proto.msg.InputMediaUploadedDocument.prototype.getThumbnail = function() {
  return /** @type{?proto.msg.InputFile} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputFile, 2));
};


/**
 * @param {?proto.msg.InputFile|undefined} value
 * @return {!proto.msg.InputMediaUploadedDocument} returns this
*/
proto.msg.InputMediaUploadedDocument.prototype.setThumbnail = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.InputMediaUploadedDocument} returns this
 */
proto.msg.InputMediaUploadedDocument.prototype.clearThumbnail = function() {
  return this.setThumbnail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.InputMediaUploadedDocument.prototype.hasThumbnail = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string MimeType = 3;
 * @return {string}
 */
proto.msg.InputMediaUploadedDocument.prototype.getMimetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.InputMediaUploadedDocument} returns this
 */
proto.msg.InputMediaUploadedDocument.prototype.setMimetype = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Caption = 4;
 * @return {string}
 */
proto.msg.InputMediaUploadedDocument.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.InputMediaUploadedDocument} returns this
 */
proto.msg.InputMediaUploadedDocument.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated InputDocument Stickers = 5;
 * @return {!Array<!proto.msg.InputDocument>}
 */
proto.msg.InputMediaUploadedDocument.prototype.getStickersList = function() {
  return /** @type{!Array<!proto.msg.InputDocument>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.InputDocument, 5));
};


/**
 * @param {!Array<!proto.msg.InputDocument>} value
 * @return {!proto.msg.InputMediaUploadedDocument} returns this
*/
proto.msg.InputMediaUploadedDocument.prototype.setStickersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.msg.InputDocument=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.InputDocument}
 */
proto.msg.InputMediaUploadedDocument.prototype.addStickers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.msg.InputDocument, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.InputMediaUploadedDocument} returns this
 */
proto.msg.InputMediaUploadedDocument.prototype.clearStickersList = function() {
  return this.setStickersList([]);
};


/**
 * repeated DocumentAttribute Attributes = 6;
 * @return {!Array<!proto.msg.DocumentAttribute>}
 */
proto.msg.InputMediaUploadedDocument.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.msg.DocumentAttribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msg.DocumentAttribute, 6));
};


/**
 * @param {!Array<!proto.msg.DocumentAttribute>} value
 * @return {!proto.msg.InputMediaUploadedDocument} returns this
*/
proto.msg.InputMediaUploadedDocument.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.msg.DocumentAttribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.DocumentAttribute}
 */
proto.msg.InputMediaUploadedDocument.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.msg.DocumentAttribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.InputMediaUploadedDocument} returns this
 */
proto.msg.InputMediaUploadedDocument.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};


/**
 * repeated MessageEntity Entities = 7;
 * @return {!Array<!proto.msg.MessageEntity>}
 */
proto.msg.InputMediaUploadedDocument.prototype.getEntitiesList = function() {
  return /** @type{!Array<!proto.msg.MessageEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.MessageEntity, 7));
};


/**
 * @param {!Array<!proto.msg.MessageEntity>} value
 * @return {!proto.msg.InputMediaUploadedDocument} returns this
*/
proto.msg.InputMediaUploadedDocument.prototype.setEntitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.msg.MessageEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.MessageEntity}
 */
proto.msg.InputMediaUploadedDocument.prototype.addEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.msg.MessageEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.InputMediaUploadedDocument} returns this
 */
proto.msg.InputMediaUploadedDocument.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};


/**
 * optional bytes TinyThumbnail = 8;
 * @return {!(string|Uint8Array)}
 */
proto.msg.InputMediaUploadedDocument.prototype.getTinythumbnail = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes TinyThumbnail = 8;
 * This is a type-conversion wrapper around `getTinythumbnail()`
 * @return {string}
 */
proto.msg.InputMediaUploadedDocument.prototype.getTinythumbnail_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTinythumbnail()));
};


/**
 * optional bytes TinyThumbnail = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTinythumbnail()`
 * @return {!Uint8Array}
 */
proto.msg.InputMediaUploadedDocument.prototype.getTinythumbnail_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTinythumbnail()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.msg.InputMediaUploadedDocument} returns this
 */
proto.msg.InputMediaUploadedDocument.prototype.setTinythumbnail = function(value) {
  return jspb.Message.setProto3BytesField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.InputMediaDocument.repeatedFields_ = [3,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.InputMediaDocument.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.InputMediaDocument.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.InputMediaDocument} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.InputMediaDocument.toObject = function(includeInstance, msg) {
  var f, obj = {
    caption: jspb.Message.getFieldWithDefault(msg, 1, ""),
    document: (f = msg.getDocument()) && core_types_pb.InputDocument.toObject(includeInstance, f),
    entitiesList: jspb.Message.toObjectList(msg.getEntitiesList(),
    core_types_pb.MessageEntity.toObject, includeInstance),
    thumbnail: (f = msg.getThumbnail()) && core_types_pb.InputFile.toObject(includeInstance, f),
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.msg.DocumentAttribute.toObject, includeInstance),
    tinythumbnail: msg.getTinythumbnail_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.InputMediaDocument}
 */
proto.msg.InputMediaDocument.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.InputMediaDocument;
  return proto.msg.InputMediaDocument.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.InputMediaDocument} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.InputMediaDocument}
 */
proto.msg.InputMediaDocument.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 2:
      var value = new core_types_pb.InputDocument;
      reader.readMessage(value,core_types_pb.InputDocument.deserializeBinaryFromReader);
      msg.setDocument(value);
      break;
    case 3:
      var value = new core_types_pb.MessageEntity;
      reader.readMessage(value,core_types_pb.MessageEntity.deserializeBinaryFromReader);
      msg.addEntities(value);
      break;
    case 4:
      var value = new core_types_pb.InputFile;
      reader.readMessage(value,core_types_pb.InputFile.deserializeBinaryFromReader);
      msg.setThumbnail(value);
      break;
    case 5:
      var value = new proto.msg.DocumentAttribute;
      reader.readMessage(value,proto.msg.DocumentAttribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTinythumbnail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.InputMediaDocument.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.InputMediaDocument.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.InputMediaDocument} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.InputMediaDocument.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDocument();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      core_types_pb.InputDocument.serializeBinaryToWriter
    );
  }
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      core_types_pb.MessageEntity.serializeBinaryToWriter
    );
  }
  f = message.getThumbnail();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      core_types_pb.InputFile.serializeBinaryToWriter
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.msg.DocumentAttribute.serializeBinaryToWriter
    );
  }
  f = message.getTinythumbnail_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
};


/**
 * optional string Caption = 1;
 * @return {string}
 */
proto.msg.InputMediaDocument.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.InputMediaDocument} returns this
 */
proto.msg.InputMediaDocument.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional InputDocument Document = 2;
 * @return {?proto.msg.InputDocument}
 */
proto.msg.InputMediaDocument.prototype.getDocument = function() {
  return /** @type{?proto.msg.InputDocument} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputDocument, 2));
};


/**
 * @param {?proto.msg.InputDocument|undefined} value
 * @return {!proto.msg.InputMediaDocument} returns this
*/
proto.msg.InputMediaDocument.prototype.setDocument = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.InputMediaDocument} returns this
 */
proto.msg.InputMediaDocument.prototype.clearDocument = function() {
  return this.setDocument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.InputMediaDocument.prototype.hasDocument = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated MessageEntity Entities = 3;
 * @return {!Array<!proto.msg.MessageEntity>}
 */
proto.msg.InputMediaDocument.prototype.getEntitiesList = function() {
  return /** @type{!Array<!proto.msg.MessageEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.MessageEntity, 3));
};


/**
 * @param {!Array<!proto.msg.MessageEntity>} value
 * @return {!proto.msg.InputMediaDocument} returns this
*/
proto.msg.InputMediaDocument.prototype.setEntitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.msg.MessageEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.MessageEntity}
 */
proto.msg.InputMediaDocument.prototype.addEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.msg.MessageEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.InputMediaDocument} returns this
 */
proto.msg.InputMediaDocument.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};


/**
 * optional InputFile Thumbnail = 4;
 * @return {?proto.msg.InputFile}
 */
proto.msg.InputMediaDocument.prototype.getThumbnail = function() {
  return /** @type{?proto.msg.InputFile} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputFile, 4));
};


/**
 * @param {?proto.msg.InputFile|undefined} value
 * @return {!proto.msg.InputMediaDocument} returns this
*/
proto.msg.InputMediaDocument.prototype.setThumbnail = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.InputMediaDocument} returns this
 */
proto.msg.InputMediaDocument.prototype.clearThumbnail = function() {
  return this.setThumbnail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.InputMediaDocument.prototype.hasThumbnail = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated DocumentAttribute Attributes = 5;
 * @return {!Array<!proto.msg.DocumentAttribute>}
 */
proto.msg.InputMediaDocument.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.msg.DocumentAttribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msg.DocumentAttribute, 5));
};


/**
 * @param {!Array<!proto.msg.DocumentAttribute>} value
 * @return {!proto.msg.InputMediaDocument} returns this
*/
proto.msg.InputMediaDocument.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.msg.DocumentAttribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.DocumentAttribute}
 */
proto.msg.InputMediaDocument.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.msg.DocumentAttribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.InputMediaDocument} returns this
 */
proto.msg.InputMediaDocument.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};


/**
 * optional bytes TinyThumbnail = 6;
 * @return {!(string|Uint8Array)}
 */
proto.msg.InputMediaDocument.prototype.getTinythumbnail = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes TinyThumbnail = 6;
 * This is a type-conversion wrapper around `getTinythumbnail()`
 * @return {string}
 */
proto.msg.InputMediaDocument.prototype.getTinythumbnail_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTinythumbnail()));
};


/**
 * optional bytes TinyThumbnail = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTinythumbnail()`
 * @return {!Uint8Array}
 */
proto.msg.InputMediaDocument.prototype.getTinythumbnail_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTinythumbnail()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.msg.InputMediaDocument} returns this
 */
proto.msg.InputMediaDocument.prototype.setTinythumbnail = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.InputMediaMessageDocument.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.InputMediaMessageDocument.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.InputMediaMessageDocument.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.InputMediaMessageDocument} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.InputMediaMessageDocument.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && core_types_pb.InputPeer.toObject(includeInstance, f),
    messageid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    caption: jspb.Message.getFieldWithDefault(msg, 3, ""),
    entitiesList: jspb.Message.toObjectList(msg.getEntitiesList(),
    core_types_pb.MessageEntity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.InputMediaMessageDocument}
 */
proto.msg.InputMediaMessageDocument.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.InputMediaMessageDocument;
  return proto.msg.InputMediaMessageDocument.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.InputMediaMessageDocument} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.InputMediaMessageDocument}
 */
proto.msg.InputMediaMessageDocument.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new core_types_pb.InputPeer;
      reader.readMessage(value,core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMessageid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 4:
      var value = new core_types_pb.MessageEntity;
      reader.readMessage(value,core_types_pb.MessageEntity.deserializeBinaryFromReader);
      msg.addEntities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.InputMediaMessageDocument.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.InputMediaMessageDocument.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.InputMediaMessageDocument} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.InputMediaMessageDocument.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = message.getMessageid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      core_types_pb.MessageEntity.serializeBinaryToWriter
    );
  }
};


/**
 * optional InputPeer Peer = 1;
 * @return {?proto.msg.InputPeer}
 */
proto.msg.InputMediaMessageDocument.prototype.getPeer = function() {
  return /** @type{?proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputPeer, 1));
};


/**
 * @param {?proto.msg.InputPeer|undefined} value
 * @return {!proto.msg.InputMediaMessageDocument} returns this
*/
proto.msg.InputMediaMessageDocument.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.InputMediaMessageDocument} returns this
 */
proto.msg.InputMediaMessageDocument.prototype.clearPeer = function() {
  return this.setPeer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.InputMediaMessageDocument.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 MessageID = 2;
 * @return {number}
 */
proto.msg.InputMediaMessageDocument.prototype.getMessageid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.InputMediaMessageDocument} returns this
 */
proto.msg.InputMediaMessageDocument.prototype.setMessageid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string Caption = 3;
 * @return {string}
 */
proto.msg.InputMediaMessageDocument.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.InputMediaMessageDocument} returns this
 */
proto.msg.InputMediaMessageDocument.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated MessageEntity Entities = 4;
 * @return {!Array<!proto.msg.MessageEntity>}
 */
proto.msg.InputMediaMessageDocument.prototype.getEntitiesList = function() {
  return /** @type{!Array<!proto.msg.MessageEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.MessageEntity, 4));
};


/**
 * @param {!Array<!proto.msg.MessageEntity>} value
 * @return {!proto.msg.InputMediaMessageDocument} returns this
*/
proto.msg.InputMediaMessageDocument.prototype.setEntitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.msg.MessageEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.MessageEntity}
 */
proto.msg.InputMediaMessageDocument.prototype.addEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.msg.MessageEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.InputMediaMessageDocument} returns this
 */
proto.msg.InputMediaMessageDocument.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.MediaDocument.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MediaDocument.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MediaDocument.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MediaDocument} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MediaDocument.toObject = function(includeInstance, msg) {
  var f, obj = {
    caption: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ttlinseconds: jspb.Message.getFieldWithDefault(msg, 2, 0),
    doc: (f = msg.getDoc()) && proto.msg.Document.toObject(includeInstance, f),
    entitiesList: jspb.Message.toObjectList(msg.getEntitiesList(),
    core_types_pb.MessageEntity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MediaDocument}
 */
proto.msg.MediaDocument.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MediaDocument;
  return proto.msg.MediaDocument.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MediaDocument} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MediaDocument}
 */
proto.msg.MediaDocument.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTtlinseconds(value);
      break;
    case 3:
      var value = new proto.msg.Document;
      reader.readMessage(value,proto.msg.Document.deserializeBinaryFromReader);
      msg.setDoc(value);
      break;
    case 4:
      var value = new core_types_pb.MessageEntity;
      reader.readMessage(value,core_types_pb.MessageEntity.deserializeBinaryFromReader);
      msg.addEntities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MediaDocument.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MediaDocument.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MediaDocument} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MediaDocument.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTtlinseconds();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDoc();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.msg.Document.serializeBinaryToWriter
    );
  }
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      core_types_pb.MessageEntity.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Caption = 1;
 * @return {string}
 */
proto.msg.MediaDocument.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.MediaDocument} returns this
 */
proto.msg.MediaDocument.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 TTLinSeconds = 2;
 * @return {number}
 */
proto.msg.MediaDocument.prototype.getTtlinseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MediaDocument} returns this
 */
proto.msg.MediaDocument.prototype.setTtlinseconds = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Document Doc = 3;
 * @return {?proto.msg.Document}
 */
proto.msg.MediaDocument.prototype.getDoc = function() {
  return /** @type{?proto.msg.Document} */ (
    jspb.Message.getWrapperField(this, proto.msg.Document, 3));
};


/**
 * @param {?proto.msg.Document|undefined} value
 * @return {!proto.msg.MediaDocument} returns this
*/
proto.msg.MediaDocument.prototype.setDoc = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.MediaDocument} returns this
 */
proto.msg.MediaDocument.prototype.clearDoc = function() {
  return this.setDoc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.MediaDocument.prototype.hasDoc = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated MessageEntity Entities = 4;
 * @return {!Array<!proto.msg.MessageEntity>}
 */
proto.msg.MediaDocument.prototype.getEntitiesList = function() {
  return /** @type{!Array<!proto.msg.MessageEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.MessageEntity, 4));
};


/**
 * @param {!Array<!proto.msg.MessageEntity>} value
 * @return {!proto.msg.MediaDocument} returns this
*/
proto.msg.MediaDocument.prototype.setEntitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.msg.MessageEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.MessageEntity}
 */
proto.msg.MediaDocument.prototype.addEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.msg.MessageEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MediaDocument} returns this
 */
proto.msg.MediaDocument.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.InputMediaGeoLocation.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.InputMediaGeoLocation.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.InputMediaGeoLocation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.InputMediaGeoLocation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.InputMediaGeoLocation.toObject = function(includeInstance, msg) {
  var f, obj = {
    lat: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    pb_long: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    caption: jspb.Message.getFieldWithDefault(msg, 3, ""),
    entitiesList: jspb.Message.toObjectList(msg.getEntitiesList(),
    core_types_pb.MessageEntity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.InputMediaGeoLocation}
 */
proto.msg.InputMediaGeoLocation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.InputMediaGeoLocation;
  return proto.msg.InputMediaGeoLocation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.InputMediaGeoLocation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.InputMediaGeoLocation}
 */
proto.msg.InputMediaGeoLocation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLat(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLong(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 4:
      var value = new core_types_pb.MessageEntity;
      reader.readMessage(value,core_types_pb.MessageEntity.deserializeBinaryFromReader);
      msg.addEntities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.InputMediaGeoLocation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.InputMediaGeoLocation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.InputMediaGeoLocation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.InputMediaGeoLocation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLat();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getLong();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      core_types_pb.MessageEntity.serializeBinaryToWriter
    );
  }
};


/**
 * optional float Lat = 1;
 * @return {number}
 */
proto.msg.InputMediaGeoLocation.prototype.getLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.msg.InputMediaGeoLocation} returns this
 */
proto.msg.InputMediaGeoLocation.prototype.setLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float Long = 2;
 * @return {number}
 */
proto.msg.InputMediaGeoLocation.prototype.getLong = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.msg.InputMediaGeoLocation} returns this
 */
proto.msg.InputMediaGeoLocation.prototype.setLong = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string Caption = 3;
 * @return {string}
 */
proto.msg.InputMediaGeoLocation.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.InputMediaGeoLocation} returns this
 */
proto.msg.InputMediaGeoLocation.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated MessageEntity Entities = 4;
 * @return {!Array<!proto.msg.MessageEntity>}
 */
proto.msg.InputMediaGeoLocation.prototype.getEntitiesList = function() {
  return /** @type{!Array<!proto.msg.MessageEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.MessageEntity, 4));
};


/**
 * @param {!Array<!proto.msg.MessageEntity>} value
 * @return {!proto.msg.InputMediaGeoLocation} returns this
*/
proto.msg.InputMediaGeoLocation.prototype.setEntitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.msg.MessageEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.MessageEntity}
 */
proto.msg.InputMediaGeoLocation.prototype.addEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.msg.MessageEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.InputMediaGeoLocation} returns this
 */
proto.msg.InputMediaGeoLocation.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.MediaGeoLocation.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MediaGeoLocation.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MediaGeoLocation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MediaGeoLocation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MediaGeoLocation.toObject = function(includeInstance, msg) {
  var f, obj = {
    lat: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    pb_long: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    caption: jspb.Message.getFieldWithDefault(msg, 3, ""),
    entitiesList: jspb.Message.toObjectList(msg.getEntitiesList(),
    core_types_pb.MessageEntity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MediaGeoLocation}
 */
proto.msg.MediaGeoLocation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MediaGeoLocation;
  return proto.msg.MediaGeoLocation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MediaGeoLocation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MediaGeoLocation}
 */
proto.msg.MediaGeoLocation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLat(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLong(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 4:
      var value = new core_types_pb.MessageEntity;
      reader.readMessage(value,core_types_pb.MessageEntity.deserializeBinaryFromReader);
      msg.addEntities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MediaGeoLocation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MediaGeoLocation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MediaGeoLocation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MediaGeoLocation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLat();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getLong();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      core_types_pb.MessageEntity.serializeBinaryToWriter
    );
  }
};


/**
 * optional float Lat = 1;
 * @return {number}
 */
proto.msg.MediaGeoLocation.prototype.getLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MediaGeoLocation} returns this
 */
proto.msg.MediaGeoLocation.prototype.setLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float Long = 2;
 * @return {number}
 */
proto.msg.MediaGeoLocation.prototype.getLong = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MediaGeoLocation} returns this
 */
proto.msg.MediaGeoLocation.prototype.setLong = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string Caption = 3;
 * @return {string}
 */
proto.msg.MediaGeoLocation.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.MediaGeoLocation} returns this
 */
proto.msg.MediaGeoLocation.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated MessageEntity Entities = 4;
 * @return {!Array<!proto.msg.MessageEntity>}
 */
proto.msg.MediaGeoLocation.prototype.getEntitiesList = function() {
  return /** @type{!Array<!proto.msg.MessageEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.MessageEntity, 4));
};


/**
 * @param {!Array<!proto.msg.MessageEntity>} value
 * @return {!proto.msg.MediaGeoLocation} returns this
*/
proto.msg.MediaGeoLocation.prototype.setEntitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.msg.MessageEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.MessageEntity}
 */
proto.msg.MediaGeoLocation.prototype.addEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.msg.MessageEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MediaGeoLocation} returns this
 */
proto.msg.MediaGeoLocation.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.InputMediaPoll.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.InputMediaPoll.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.InputMediaPoll} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.InputMediaPoll.toObject = function(includeInstance, msg) {
  var f, obj = {
    poll: (f = msg.getPoll()) && proto.msg.MediaPoll.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.InputMediaPoll}
 */
proto.msg.InputMediaPoll.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.InputMediaPoll;
  return proto.msg.InputMediaPoll.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.InputMediaPoll} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.InputMediaPoll}
 */
proto.msg.InputMediaPoll.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msg.MediaPoll;
      reader.readMessage(value,proto.msg.MediaPoll.deserializeBinaryFromReader);
      msg.setPoll(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.InputMediaPoll.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.InputMediaPoll.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.InputMediaPoll} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.InputMediaPoll.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPoll();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.msg.MediaPoll.serializeBinaryToWriter
    );
  }
};


/**
 * optional MediaPoll Poll = 1;
 * @return {?proto.msg.MediaPoll}
 */
proto.msg.InputMediaPoll.prototype.getPoll = function() {
  return /** @type{?proto.msg.MediaPoll} */ (
    jspb.Message.getWrapperField(this, proto.msg.MediaPoll, 1));
};


/**
 * @param {?proto.msg.MediaPoll|undefined} value
 * @return {!proto.msg.InputMediaPoll} returns this
*/
proto.msg.InputMediaPoll.prototype.setPoll = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.InputMediaPoll} returns this
 */
proto.msg.InputMediaPoll.prototype.clearPoll = function() {
  return this.setPoll(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.InputMediaPoll.prototype.hasPoll = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.MediaPoll.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.MediaPoll.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.MediaPoll.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.MediaPoll} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MediaPoll.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    closed: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    publicvoters: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    multichoice: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    quiz: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    question: jspb.Message.getFieldWithDefault(msg, 6, ""),
    answersList: jspb.Message.toObjectList(msg.getAnswersList(),
    proto.msg.PollAnswer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.MediaPoll}
 */
proto.msg.MediaPoll.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.MediaPoll;
  return proto.msg.MediaPoll.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.MediaPoll} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.MediaPoll}
 */
proto.msg.MediaPoll.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClosed(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPublicvoters(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMultichoice(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQuiz(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 7:
      var value = new proto.msg.PollAnswer;
      reader.readMessage(value,proto.msg.PollAnswer.deserializeBinaryFromReader);
      msg.addAnswers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.MediaPoll.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.MediaPoll.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.MediaPoll} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.MediaPoll.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getClosed();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getPublicvoters();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getMultichoice();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getQuiz();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAnswersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.msg.PollAnswer.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 ID = 1;
 * @return {number}
 */
proto.msg.MediaPoll.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.MediaPoll} returns this
 */
proto.msg.MediaPoll.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool Closed = 2;
 * @return {boolean}
 */
proto.msg.MediaPoll.prototype.getClosed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.MediaPoll} returns this
 */
proto.msg.MediaPoll.prototype.setClosed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool PublicVoters = 3;
 * @return {boolean}
 */
proto.msg.MediaPoll.prototype.getPublicvoters = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.MediaPoll} returns this
 */
proto.msg.MediaPoll.prototype.setPublicvoters = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool MultiChoice = 4;
 * @return {boolean}
 */
proto.msg.MediaPoll.prototype.getMultichoice = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.MediaPoll} returns this
 */
proto.msg.MediaPoll.prototype.setMultichoice = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool Quiz = 5;
 * @return {boolean}
 */
proto.msg.MediaPoll.prototype.getQuiz = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.MediaPoll} returns this
 */
proto.msg.MediaPoll.prototype.setQuiz = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string Question = 6;
 * @return {string}
 */
proto.msg.MediaPoll.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.MediaPoll} returns this
 */
proto.msg.MediaPoll.prototype.setQuestion = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated PollAnswer Answers = 7;
 * @return {!Array<!proto.msg.PollAnswer>}
 */
proto.msg.MediaPoll.prototype.getAnswersList = function() {
  return /** @type{!Array<!proto.msg.PollAnswer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msg.PollAnswer, 7));
};


/**
 * @param {!Array<!proto.msg.PollAnswer>} value
 * @return {!proto.msg.MediaPoll} returns this
*/
proto.msg.MediaPoll.prototype.setAnswersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.msg.PollAnswer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.PollAnswer}
 */
proto.msg.MediaPoll.prototype.addAnswers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.msg.PollAnswer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.MediaPoll} returns this
 */
proto.msg.MediaPoll.prototype.clearAnswersList = function() {
  return this.setAnswersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.PollAnswer.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.PollAnswer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.PollAnswer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.PollAnswer.toObject = function(includeInstance, msg) {
  var f, obj = {
    text: jspb.Message.getFieldWithDefault(msg, 1, ""),
    option: msg.getOption_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.PollAnswer}
 */
proto.msg.PollAnswer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.PollAnswer;
  return proto.msg.PollAnswer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.PollAnswer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.PollAnswer}
 */
proto.msg.PollAnswer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOption(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.PollAnswer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.PollAnswer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.PollAnswer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.PollAnswer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOption_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional string Text = 1;
 * @return {string}
 */
proto.msg.PollAnswer.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.PollAnswer} returns this
 */
proto.msg.PollAnswer.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes Option = 2;
 * @return {!(string|Uint8Array)}
 */
proto.msg.PollAnswer.prototype.getOption = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes Option = 2;
 * This is a type-conversion wrapper around `getOption()`
 * @return {string}
 */
proto.msg.PollAnswer.prototype.getOption_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOption()));
};


/**
 * optional bytes Option = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOption()`
 * @return {!Uint8Array}
 */
proto.msg.PollAnswer.prototype.getOption_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOption()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.msg.PollAnswer} returns this
 */
proto.msg.PollAnswer.prototype.setOption = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.PollResults.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.PollResults.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.PollResults.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.PollResults} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.PollResults.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.msg.PollAnswerVoters.toObject, includeInstance),
    totalvoters: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.PollResults}
 */
proto.msg.PollResults.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.PollResults;
  return proto.msg.PollResults.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.PollResults} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.PollResults}
 */
proto.msg.PollResults.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msg.PollAnswerVoters;
      reader.readMessage(value,proto.msg.PollAnswerVoters.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalvoters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.PollResults.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.PollResults.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.PollResults} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.PollResults.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.msg.PollAnswerVoters.serializeBinaryToWriter
    );
  }
  f = message.getTotalvoters();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated PollAnswerVoters Results = 1;
 * @return {!Array<!proto.msg.PollAnswerVoters>}
 */
proto.msg.PollResults.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.msg.PollAnswerVoters>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msg.PollAnswerVoters, 1));
};


/**
 * @param {!Array<!proto.msg.PollAnswerVoters>} value
 * @return {!proto.msg.PollResults} returns this
*/
proto.msg.PollResults.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msg.PollAnswerVoters=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.PollAnswerVoters}
 */
proto.msg.PollResults.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msg.PollAnswerVoters, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.PollResults} returns this
 */
proto.msg.PollResults.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional int64 TotalVoters = 2;
 * @return {number}
 */
proto.msg.PollResults.prototype.getTotalvoters = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.PollResults} returns this
 */
proto.msg.PollResults.prototype.setTotalvoters = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.PollAnswerVoters.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.PollAnswerVoters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.PollAnswerVoters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.PollAnswerVoters.toObject = function(includeInstance, msg) {
  var f, obj = {
    chosen: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    correct: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    option: msg.getOption_asB64(),
    voters: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.PollAnswerVoters}
 */
proto.msg.PollAnswerVoters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.PollAnswerVoters;
  return proto.msg.PollAnswerVoters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.PollAnswerVoters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.PollAnswerVoters}
 */
proto.msg.PollAnswerVoters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setChosen(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCorrect(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOption(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVoters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.PollAnswerVoters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.PollAnswerVoters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.PollAnswerVoters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.PollAnswerVoters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChosen();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCorrect();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getOption_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getVoters();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional bool Chosen = 1;
 * @return {boolean}
 */
proto.msg.PollAnswerVoters.prototype.getChosen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.PollAnswerVoters} returns this
 */
proto.msg.PollAnswerVoters.prototype.setChosen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool Correct = 2;
 * @return {boolean}
 */
proto.msg.PollAnswerVoters.prototype.getCorrect = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.PollAnswerVoters} returns this
 */
proto.msg.PollAnswerVoters.prototype.setCorrect = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bytes Option = 3;
 * @return {!(string|Uint8Array)}
 */
proto.msg.PollAnswerVoters.prototype.getOption = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes Option = 3;
 * This is a type-conversion wrapper around `getOption()`
 * @return {string}
 */
proto.msg.PollAnswerVoters.prototype.getOption_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOption()));
};


/**
 * optional bytes Option = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOption()`
 * @return {!Uint8Array}
 */
proto.msg.PollAnswerVoters.prototype.getOption_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOption()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.msg.PollAnswerVoters} returns this
 */
proto.msg.PollAnswerVoters.prototype.setOption = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional int64 Voters = 4;
 * @return {number}
 */
proto.msg.PollAnswerVoters.prototype.getVoters = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.PollAnswerVoters} returns this
 */
proto.msg.PollAnswerVoters.prototype.setVoters = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.msg.DocumentType = {
  DOCUMENTTYPEUNKNOWN: 0,
  DOCUMENTTYPEPHOTO: 1,
  DOCUMENTTYPEVOICE: 2,
  DOCUMENTTYPEVIDEO: 3,
  DOCUMENTTYPEWEBPAGE: 4,
  DOCUMENTTYPERESERVED1: 5,
  DOCUMENTTYPERESERVED2: 6,
  DOCUMENTTYPERESERVED3: 7,
  DOCUMENTTYPERESERVED4: 8
};

/**
 * @enum {number}
 */
proto.msg.DocumentAttributeType = {
  ATTRIBUTETYPENONE: 0,
  ATTRIBUTETYPEAUDIO: 1,
  ATTRIBUTETYPEVIDEO: 2,
  ATTRIBUTETYPEPHOTO: 3,
  ATTRIBUTETYPEFILE: 4,
  ATTRIBUTETYPEANIMATED: 5,
  ATTRIBUTETYPEVOICECALL: 6,
  ATTRIBUTERESERVED2: 7,
  ATTRIBUTERESERVED3: 8,
  ATTRIBUTERESERVED4: 9
};

goog.object.extend(exports, proto.msg);
