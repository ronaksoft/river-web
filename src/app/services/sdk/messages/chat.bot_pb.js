/* eslint-disable */
// source: chat.bot.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var core_types_pb = require('./core.types_pb.js');
goog.object.extend(proto, core_types_pb);
var chat_messages_medias_pb = require('./chat.messages.medias_pb.js');
goog.object.extend(proto, chat_messages_medias_pb);
var chat_wallpaper_pb = require('./chat.wallpaper_pb.js');
goog.object.extend(proto, chat_wallpaper_pb);
goog.exportSymbol('proto.msg.BotCallbackAnswer', null, global);
goog.exportSymbol('proto.msg.BotCommandsMany', null, global);
goog.exportSymbol('proto.msg.BotDeleteMessage', null, global);
goog.exportSymbol('proto.msg.BotEditMessage', null, global);
goog.exportSymbol('proto.msg.BotGet', null, global);
goog.exportSymbol('proto.msg.BotGetCallbackAnswer', null, global);
goog.exportSymbol('proto.msg.BotGetCommands', null, global);
goog.exportSymbol('proto.msg.BotGetInlineResults', null, global);
goog.exportSymbol('proto.msg.BotInlineMessage', null, global);
goog.exportSymbol('proto.msg.BotInlineResult', null, global);
goog.exportSymbol('proto.msg.BotInlineSwitchPM', null, global);
goog.exportSymbol('proto.msg.BotRecall', null, global);
goog.exportSymbol('proto.msg.BotRecalled', null, global);
goog.exportSymbol('proto.msg.BotResults', null, global);
goog.exportSymbol('proto.msg.BotRevokeToken', null, global);
goog.exportSymbol('proto.msg.BotSaveFilePart', null, global);
goog.exportSymbol('proto.msg.BotSendInlineResults', null, global);
goog.exportSymbol('proto.msg.BotSendMedia', null, global);
goog.exportSymbol('proto.msg.BotSendMessage', null, global);
goog.exportSymbol('proto.msg.BotSetCallbackAnswer', null, global);
goog.exportSymbol('proto.msg.BotSetInfo', null, global);
goog.exportSymbol('proto.msg.BotSetInlineResults', null, global);
goog.exportSymbol('proto.msg.BotStart', null, global);
goog.exportSymbol('proto.msg.BotToken', null, global);
goog.exportSymbol('proto.msg.BotUpdatePhoto', null, global);
goog.exportSymbol('proto.msg.BotUpdateProfile', null, global);
goog.exportSymbol('proto.msg.BotUploadGif', null, global);
goog.exportSymbol('proto.msg.BotUploadWallPaper', null, global);
goog.exportSymbol('proto.msg.BotsMany', null, global);
goog.exportSymbol('proto.msg.InputBotInlineMessage', null, global);
goog.exportSymbol('proto.msg.InputBotInlineResult', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotStart = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotStart, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotStart.displayName = 'proto.msg.BotStart';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotRecall = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotRecall, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotRecall.displayName = 'proto.msg.BotRecall';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotSetInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.BotSetInfo.repeatedFields_, null);
};
goog.inherits(proto.msg.BotSetInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotSetInfo.displayName = 'proto.msg.BotSetInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotGet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotGet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotGet.displayName = 'proto.msg.BotGet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotSendMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.BotSendMessage.repeatedFields_, null);
};
goog.inherits(proto.msg.BotSendMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotSendMessage.displayName = 'proto.msg.BotSendMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotEditMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.BotEditMessage.repeatedFields_, null);
};
goog.inherits(proto.msg.BotEditMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotEditMessage.displayName = 'proto.msg.BotEditMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotSendMedia = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotSendMedia, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotSendMedia.displayName = 'proto.msg.BotSendMedia';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotSaveFilePart = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotSaveFilePart, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotSaveFilePart.displayName = 'proto.msg.BotSaveFilePart';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotUpdateProfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotUpdateProfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotUpdateProfile.displayName = 'proto.msg.BotUpdateProfile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotUpdatePhoto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotUpdatePhoto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotUpdatePhoto.displayName = 'proto.msg.BotUpdatePhoto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotRevokeToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotRevokeToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotRevokeToken.displayName = 'proto.msg.BotRevokeToken';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotDeleteMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.BotDeleteMessage.repeatedFields_, null);
};
goog.inherits(proto.msg.BotDeleteMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotDeleteMessage.displayName = 'proto.msg.BotDeleteMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotSetCallbackAnswer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotSetCallbackAnswer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotSetCallbackAnswer.displayName = 'proto.msg.BotSetCallbackAnswer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotGetCallbackAnswer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotGetCallbackAnswer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotGetCallbackAnswer.displayName = 'proto.msg.BotGetCallbackAnswer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotGetInlineResults = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotGetInlineResults, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotGetInlineResults.displayName = 'proto.msg.BotGetInlineResults';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotSetInlineResults = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.BotSetInlineResults.repeatedFields_, null);
};
goog.inherits(proto.msg.BotSetInlineResults, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotSetInlineResults.displayName = 'proto.msg.BotSetInlineResults';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotSendInlineResults = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotSendInlineResults, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotSendInlineResults.displayName = 'proto.msg.BotSendInlineResults';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotUploadWallPaper = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotUploadWallPaper, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotUploadWallPaper.displayName = 'proto.msg.BotUploadWallPaper';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotUploadGif = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotUploadGif, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotUploadGif.displayName = 'proto.msg.BotUploadGif';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotResults = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.BotResults.repeatedFields_, null);
};
goog.inherits(proto.msg.BotResults, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotResults.displayName = 'proto.msg.BotResults';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotInlineSwitchPM = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotInlineSwitchPM, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotInlineSwitchPM.displayName = 'proto.msg.BotInlineSwitchPM';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotInlineResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotInlineResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotInlineResult.displayName = 'proto.msg.BotInlineResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.InputBotInlineResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.InputBotInlineResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.InputBotInlineResult.displayName = 'proto.msg.InputBotInlineResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotInlineMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.BotInlineMessage.repeatedFields_, null);
};
goog.inherits(proto.msg.BotInlineMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotInlineMessage.displayName = 'proto.msg.BotInlineMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.InputBotInlineMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.InputBotInlineMessage.repeatedFields_, null);
};
goog.inherits(proto.msg.InputBotInlineMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.InputBotInlineMessage.displayName = 'proto.msg.InputBotInlineMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotToken.displayName = 'proto.msg.BotToken';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotRecalled = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotRecalled, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotRecalled.displayName = 'proto.msg.BotRecalled';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotCallbackAnswer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotCallbackAnswer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotCallbackAnswer.displayName = 'proto.msg.BotCallbackAnswer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotsMany = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.BotsMany.repeatedFields_, null);
};
goog.inherits(proto.msg.BotsMany, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotsMany.displayName = 'proto.msg.BotsMany';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotGetCommands = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.BotGetCommands, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotGetCommands.displayName = 'proto.msg.BotGetCommands';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.BotCommandsMany = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.BotCommandsMany.repeatedFields_, null);
};
goog.inherits(proto.msg.BotCommandsMany, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.BotCommandsMany.displayName = 'proto.msg.BotCommandsMany';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotStart.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotStart.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotStart} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotStart.toObject = function(includeInstance, msg) {
  var f, obj = {
    bot: (f = msg.getBot()) && core_types_pb.InputPeer.toObject(includeInstance, f),
    randomid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    startparam: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotStart}
 */
proto.msg.BotStart.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotStart;
  return proto.msg.BotStart.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotStart} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotStart}
 */
proto.msg.BotStart.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new core_types_pb.InputPeer;
      reader.readMessage(value,core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setBot(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRandomid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartparam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotStart.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotStart.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotStart} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotStart.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBot();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = message.getRandomid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getStartparam();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional InputPeer Bot = 1;
 * @return {?proto.msg.InputPeer}
 */
proto.msg.BotStart.prototype.getBot = function() {
  return /** @type{?proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputPeer, 1));
};


/**
 * @param {?proto.msg.InputPeer|undefined} value
 * @return {!proto.msg.BotStart} returns this
*/
proto.msg.BotStart.prototype.setBot = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotStart} returns this
 */
proto.msg.BotStart.prototype.clearBot = function() {
  return this.setBot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotStart.prototype.hasBot = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 RandomID = 2;
 * @return {number}
 */
proto.msg.BotStart.prototype.getRandomid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotStart} returns this
 */
proto.msg.BotStart.prototype.setRandomid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string StartParam = 3;
 * @return {string}
 */
proto.msg.BotStart.prototype.getStartparam = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotStart} returns this
 */
proto.msg.BotStart.prototype.setStartparam = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotRecall.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotRecall.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotRecall} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotRecall.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotRecall}
 */
proto.msg.BotRecall.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotRecall;
  return proto.msg.BotRecall.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotRecall} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotRecall}
 */
proto.msg.BotRecall.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotRecall.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotRecall.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotRecall} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotRecall.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 Version = 1;
 * @return {number}
 */
proto.msg.BotRecall.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotRecall} returns this
 */
proto.msg.BotRecall.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.BotSetInfo.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotSetInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotSetInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotSetInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotSetInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    botid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    randomid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    owner: jspb.Message.getFieldWithDefault(msg, 3, 0),
    botcommandsList: jspb.Message.toObjectList(msg.getBotcommandsList(),
    core_types_pb.BotCommands.toObject, includeInstance),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    inlineplaceholder: jspb.Message.getFieldWithDefault(msg, 6, ""),
    inlinegeo: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotSetInfo}
 */
proto.msg.BotSetInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotSetInfo;
  return proto.msg.BotSetInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotSetInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotSetInfo}
 */
proto.msg.BotSetInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBotid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRandomid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOwner(value);
      break;
    case 4:
      var value = new core_types_pb.BotCommands;
      reader.readMessage(value,core_types_pb.BotCommands.deserializeBinaryFromReader);
      msg.addBotcommands(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setInlineplaceholder(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInlinegeo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotSetInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotSetInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotSetInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotSetInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBotid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getRandomid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getOwner();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getBotcommandsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      core_types_pb.BotCommands.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getInlineplaceholder();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getInlinegeo();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional int64 BotID = 1;
 * @return {number}
 */
proto.msg.BotSetInfo.prototype.getBotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotSetInfo} returns this
 */
proto.msg.BotSetInfo.prototype.setBotid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 RandomID = 2;
 * @return {number}
 */
proto.msg.BotSetInfo.prototype.getRandomid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotSetInfo} returns this
 */
proto.msg.BotSetInfo.prototype.setRandomid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 Owner = 3;
 * @return {number}
 */
proto.msg.BotSetInfo.prototype.getOwner = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotSetInfo} returns this
 */
proto.msg.BotSetInfo.prototype.setOwner = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated BotCommands BotCommands = 4;
 * @return {!Array<!proto.msg.BotCommands>}
 */
proto.msg.BotSetInfo.prototype.getBotcommandsList = function() {
  return /** @type{!Array<!proto.msg.BotCommands>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.BotCommands, 4));
};


/**
 * @param {!Array<!proto.msg.BotCommands>} value
 * @return {!proto.msg.BotSetInfo} returns this
*/
proto.msg.BotSetInfo.prototype.setBotcommandsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.msg.BotCommands=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.BotCommands}
 */
proto.msg.BotSetInfo.prototype.addBotcommands = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.msg.BotCommands, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.BotSetInfo} returns this
 */
proto.msg.BotSetInfo.prototype.clearBotcommandsList = function() {
  return this.setBotcommandsList([]);
};


/**
 * optional string Description = 5;
 * @return {string}
 */
proto.msg.BotSetInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotSetInfo} returns this
 */
proto.msg.BotSetInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string InlinePlaceholder = 6;
 * @return {string}
 */
proto.msg.BotSetInfo.prototype.getInlineplaceholder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotSetInfo} returns this
 */
proto.msg.BotSetInfo.prototype.setInlineplaceholder = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool InlineGeo = 7;
 * @return {boolean}
 */
proto.msg.BotSetInfo.prototype.getInlinegeo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.BotSetInfo} returns this
 */
proto.msg.BotSetInfo.prototype.setInlinegeo = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotGet.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotGet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotGet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotGet.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotGet}
 */
proto.msg.BotGet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotGet;
  return proto.msg.BotGet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotGet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotGet}
 */
proto.msg.BotGet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotGet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotGet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotGet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotGet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int64 UserID = 1;
 * @return {string}
 */
proto.msg.BotGet.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotGet} returns this
 */
proto.msg.BotGet.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional int32 Limit = 2;
 * @return {number}
 */
proto.msg.BotGet.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotGet} returns this
 */
proto.msg.BotGet.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.BotSendMessage.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotSendMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotSendMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotSendMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotSendMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    randomid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    peer: (f = msg.getPeer()) && core_types_pb.InputPeer.toObject(includeInstance, f),
    body: jspb.Message.getFieldWithDefault(msg, 5, ""),
    replyto: jspb.Message.getFieldWithDefault(msg, 6, 0),
    cleardraft: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    entitiesList: jspb.Message.toObjectList(msg.getEntitiesList(),
    core_types_pb.MessageEntity.toObject, includeInstance),
    replymarkup: jspb.Message.getFieldWithDefault(msg, 9, 0),
    replymarkupdata: msg.getReplymarkupdata_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotSendMessage}
 */
proto.msg.BotSendMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotSendMessage;
  return proto.msg.BotSendMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotSendMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotSendMessage}
 */
proto.msg.BotSendMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRandomid(value);
      break;
    case 2:
      var value = new core_types_pb.InputPeer;
      reader.readMessage(value,core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReplyto(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCleardraft(value);
      break;
    case 8:
      var value = new core_types_pb.MessageEntity;
      reader.readMessage(value,core_types_pb.MessageEntity.deserializeBinaryFromReader);
      msg.addEntities(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReplymarkup(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setReplymarkupdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotSendMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotSendMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotSendMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotSendMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRandomid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getReplyto();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getCleardraft();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      core_types_pb.MessageEntity.serializeBinaryToWriter
    );
  }
  f = message.getReplymarkup();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getReplymarkupdata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      10,
      f
    );
  }
};


/**
 * optional int64 RandomID = 1;
 * @return {number}
 */
proto.msg.BotSendMessage.prototype.getRandomid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotSendMessage} returns this
 */
proto.msg.BotSendMessage.prototype.setRandomid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional InputPeer Peer = 2;
 * @return {?proto.msg.InputPeer}
 */
proto.msg.BotSendMessage.prototype.getPeer = function() {
  return /** @type{?proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputPeer, 2));
};


/**
 * @param {?proto.msg.InputPeer|undefined} value
 * @return {!proto.msg.BotSendMessage} returns this
*/
proto.msg.BotSendMessage.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotSendMessage} returns this
 */
proto.msg.BotSendMessage.prototype.clearPeer = function() {
  return this.setPeer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotSendMessage.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string Body = 5;
 * @return {string}
 */
proto.msg.BotSendMessage.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotSendMessage} returns this
 */
proto.msg.BotSendMessage.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 ReplyTo = 6;
 * @return {number}
 */
proto.msg.BotSendMessage.prototype.getReplyto = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotSendMessage} returns this
 */
proto.msg.BotSendMessage.prototype.setReplyto = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool ClearDraft = 7;
 * @return {boolean}
 */
proto.msg.BotSendMessage.prototype.getCleardraft = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.BotSendMessage} returns this
 */
proto.msg.BotSendMessage.prototype.setCleardraft = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * repeated MessageEntity Entities = 8;
 * @return {!Array<!proto.msg.MessageEntity>}
 */
proto.msg.BotSendMessage.prototype.getEntitiesList = function() {
  return /** @type{!Array<!proto.msg.MessageEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.MessageEntity, 8));
};


/**
 * @param {!Array<!proto.msg.MessageEntity>} value
 * @return {!proto.msg.BotSendMessage} returns this
*/
proto.msg.BotSendMessage.prototype.setEntitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.msg.MessageEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.MessageEntity}
 */
proto.msg.BotSendMessage.prototype.addEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.msg.MessageEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.BotSendMessage} returns this
 */
proto.msg.BotSendMessage.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};


/**
 * optional int64 ReplyMarkup = 9;
 * @return {number}
 */
proto.msg.BotSendMessage.prototype.getReplymarkup = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotSendMessage} returns this
 */
proto.msg.BotSendMessage.prototype.setReplymarkup = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional bytes ReplyMarkupData = 10;
 * @return {!(string|Uint8Array)}
 */
proto.msg.BotSendMessage.prototype.getReplymarkupdata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes ReplyMarkupData = 10;
 * This is a type-conversion wrapper around `getReplymarkupdata()`
 * @return {string}
 */
proto.msg.BotSendMessage.prototype.getReplymarkupdata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getReplymarkupdata()));
};


/**
 * optional bytes ReplyMarkupData = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getReplymarkupdata()`
 * @return {!Uint8Array}
 */
proto.msg.BotSendMessage.prototype.getReplymarkupdata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getReplymarkupdata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.msg.BotSendMessage} returns this
 */
proto.msg.BotSendMessage.prototype.setReplymarkupdata = function(value) {
  return jspb.Message.setProto3BytesField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.BotEditMessage.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotEditMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotEditMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotEditMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotEditMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    randomid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    peer: (f = msg.getPeer()) && core_types_pb.InputPeer.toObject(includeInstance, f),
    body: jspb.Message.getFieldWithDefault(msg, 3, ""),
    messageid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    entitiesList: jspb.Message.toObjectList(msg.getEntitiesList(),
    core_types_pb.MessageEntity.toObject, includeInstance),
    replymarkup: jspb.Message.getFieldWithDefault(msg, 6, 0),
    replymarkupdata: msg.getReplymarkupdata_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotEditMessage}
 */
proto.msg.BotEditMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotEditMessage;
  return proto.msg.BotEditMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotEditMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotEditMessage}
 */
proto.msg.BotEditMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRandomid(value);
      break;
    case 2:
      var value = new core_types_pb.InputPeer;
      reader.readMessage(value,core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMessageid(value);
      break;
    case 5:
      var value = new core_types_pb.MessageEntity;
      reader.readMessage(value,core_types_pb.MessageEntity.deserializeBinaryFromReader);
      msg.addEntities(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReplymarkup(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setReplymarkupdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotEditMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotEditMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotEditMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotEditMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRandomid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMessageid();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      core_types_pb.MessageEntity.serializeBinaryToWriter
    );
  }
  f = message.getReplymarkup();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getReplymarkupdata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
};


/**
 * optional int64 RandomID = 1;
 * @return {number}
 */
proto.msg.BotEditMessage.prototype.getRandomid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotEditMessage} returns this
 */
proto.msg.BotEditMessage.prototype.setRandomid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional InputPeer Peer = 2;
 * @return {?proto.msg.InputPeer}
 */
proto.msg.BotEditMessage.prototype.getPeer = function() {
  return /** @type{?proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputPeer, 2));
};


/**
 * @param {?proto.msg.InputPeer|undefined} value
 * @return {!proto.msg.BotEditMessage} returns this
*/
proto.msg.BotEditMessage.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotEditMessage} returns this
 */
proto.msg.BotEditMessage.prototype.clearPeer = function() {
  return this.setPeer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotEditMessage.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string Body = 3;
 * @return {string}
 */
proto.msg.BotEditMessage.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotEditMessage} returns this
 */
proto.msg.BotEditMessage.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 MessageID = 4;
 * @return {number}
 */
proto.msg.BotEditMessage.prototype.getMessageid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotEditMessage} returns this
 */
proto.msg.BotEditMessage.prototype.setMessageid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated MessageEntity Entities = 5;
 * @return {!Array<!proto.msg.MessageEntity>}
 */
proto.msg.BotEditMessage.prototype.getEntitiesList = function() {
  return /** @type{!Array<!proto.msg.MessageEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.MessageEntity, 5));
};


/**
 * @param {!Array<!proto.msg.MessageEntity>} value
 * @return {!proto.msg.BotEditMessage} returns this
*/
proto.msg.BotEditMessage.prototype.setEntitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.msg.MessageEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.MessageEntity}
 */
proto.msg.BotEditMessage.prototype.addEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.msg.MessageEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.BotEditMessage} returns this
 */
proto.msg.BotEditMessage.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};


/**
 * optional int64 ReplyMarkup = 6;
 * @return {number}
 */
proto.msg.BotEditMessage.prototype.getReplymarkup = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotEditMessage} returns this
 */
proto.msg.BotEditMessage.prototype.setReplymarkup = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bytes ReplyMarkupData = 7;
 * @return {!(string|Uint8Array)}
 */
proto.msg.BotEditMessage.prototype.getReplymarkupdata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes ReplyMarkupData = 7;
 * This is a type-conversion wrapper around `getReplymarkupdata()`
 * @return {string}
 */
proto.msg.BotEditMessage.prototype.getReplymarkupdata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getReplymarkupdata()));
};


/**
 * optional bytes ReplyMarkupData = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getReplymarkupdata()`
 * @return {!Uint8Array}
 */
proto.msg.BotEditMessage.prototype.getReplymarkupdata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getReplymarkupdata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.msg.BotEditMessage} returns this
 */
proto.msg.BotEditMessage.prototype.setReplymarkupdata = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotSendMedia.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotSendMedia.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotSendMedia} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotSendMedia.toObject = function(includeInstance, msg) {
  var f, obj = {
    randomid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    peer: (f = msg.getPeer()) && core_types_pb.InputPeer.toObject(includeInstance, f),
    mediatype: jspb.Message.getFieldWithDefault(msg, 3, 0),
    mediadata: msg.getMediadata_asB64(),
    replyto: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotSendMedia}
 */
proto.msg.BotSendMedia.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotSendMedia;
  return proto.msg.BotSendMedia.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotSendMedia} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotSendMedia}
 */
proto.msg.BotSendMedia.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRandomid(value);
      break;
    case 2:
      var value = new core_types_pb.InputPeer;
      reader.readMessage(value,core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 3:
      var value = /** @type {!proto.msg.InputMediaType} */ (reader.readEnum());
      msg.setMediatype(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMediadata(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReplyto(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotSendMedia.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotSendMedia.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotSendMedia} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotSendMedia.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRandomid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = message.getMediatype();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getMediadata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getReplyto();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional int64 RandomID = 1;
 * @return {number}
 */
proto.msg.BotSendMedia.prototype.getRandomid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotSendMedia} returns this
 */
proto.msg.BotSendMedia.prototype.setRandomid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional InputPeer Peer = 2;
 * @return {?proto.msg.InputPeer}
 */
proto.msg.BotSendMedia.prototype.getPeer = function() {
  return /** @type{?proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputPeer, 2));
};


/**
 * @param {?proto.msg.InputPeer|undefined} value
 * @return {!proto.msg.BotSendMedia} returns this
*/
proto.msg.BotSendMedia.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotSendMedia} returns this
 */
proto.msg.BotSendMedia.prototype.clearPeer = function() {
  return this.setPeer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotSendMedia.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional InputMediaType MediaType = 3;
 * @return {!proto.msg.InputMediaType}
 */
proto.msg.BotSendMedia.prototype.getMediatype = function() {
  return /** @type {!proto.msg.InputMediaType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.msg.InputMediaType} value
 * @return {!proto.msg.BotSendMedia} returns this
 */
proto.msg.BotSendMedia.prototype.setMediatype = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bytes MediaData = 4;
 * @return {!(string|Uint8Array)}
 */
proto.msg.BotSendMedia.prototype.getMediadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes MediaData = 4;
 * This is a type-conversion wrapper around `getMediadata()`
 * @return {string}
 */
proto.msg.BotSendMedia.prototype.getMediadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMediadata()));
};


/**
 * optional bytes MediaData = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMediadata()`
 * @return {!Uint8Array}
 */
proto.msg.BotSendMedia.prototype.getMediadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMediadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.msg.BotSendMedia} returns this
 */
proto.msg.BotSendMedia.prototype.setMediadata = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional int64 ReplyTo = 5;
 * @return {number}
 */
proto.msg.BotSendMedia.prototype.getReplyto = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotSendMedia} returns this
 */
proto.msg.BotSendMedia.prototype.setReplyto = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotSaveFilePart.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotSaveFilePart.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotSaveFilePart} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotSaveFilePart.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileid: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    partid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalparts: jspb.Message.getFieldWithDefault(msg, 3, 0),
    bytes: msg.getBytes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotSaveFilePart}
 */
proto.msg.BotSaveFilePart.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotSaveFilePart;
  return proto.msg.BotSaveFilePart.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotSaveFilePart} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotSaveFilePart}
 */
proto.msg.BotSaveFilePart.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setFileid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPartid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalparts(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotSaveFilePart.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotSaveFilePart.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotSaveFilePart} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotSaveFilePart.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getPartid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTotalparts();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional int64 FileID = 1;
 * @return {string}
 */
proto.msg.BotSaveFilePart.prototype.getFileid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotSaveFilePart} returns this
 */
proto.msg.BotSaveFilePart.prototype.setFileid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional int32 PartID = 2;
 * @return {number}
 */
proto.msg.BotSaveFilePart.prototype.getPartid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotSaveFilePart} returns this
 */
proto.msg.BotSaveFilePart.prototype.setPartid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 TotalParts = 3;
 * @return {number}
 */
proto.msg.BotSaveFilePart.prototype.getTotalparts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotSaveFilePart} returns this
 */
proto.msg.BotSaveFilePart.prototype.setTotalparts = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes Bytes = 4;
 * @return {!(string|Uint8Array)}
 */
proto.msg.BotSaveFilePart.prototype.getBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes Bytes = 4;
 * This is a type-conversion wrapper around `getBytes()`
 * @return {string}
 */
proto.msg.BotSaveFilePart.prototype.getBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytes()));
};


/**
 * optional bytes Bytes = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytes()`
 * @return {!Uint8Array}
 */
proto.msg.BotSaveFilePart.prototype.getBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.msg.BotSaveFilePart} returns this
 */
proto.msg.BotSaveFilePart.prototype.setBytes = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotUpdateProfile.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotUpdateProfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotUpdateProfile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotUpdateProfile.toObject = function(includeInstance, msg) {
  var f, obj = {
    botid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bio: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotUpdateProfile}
 */
proto.msg.BotUpdateProfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotUpdateProfile;
  return proto.msg.BotUpdateProfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotUpdateProfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotUpdateProfile}
 */
proto.msg.BotUpdateProfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBotid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBio(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotUpdateProfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotUpdateProfile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotUpdateProfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotUpdateProfile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBotid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBio();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int64 BotID = 1;
 * @return {number}
 */
proto.msg.BotUpdateProfile.prototype.getBotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotUpdateProfile} returns this
 */
proto.msg.BotUpdateProfile.prototype.setBotid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.msg.BotUpdateProfile.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotUpdateProfile} returns this
 */
proto.msg.BotUpdateProfile.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Bio = 4;
 * @return {string}
 */
proto.msg.BotUpdateProfile.prototype.getBio = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotUpdateProfile} returns this
 */
proto.msg.BotUpdateProfile.prototype.setBio = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotUpdatePhoto.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotUpdatePhoto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotUpdatePhoto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotUpdatePhoto.toObject = function(includeInstance, msg) {
  var f, obj = {
    file: (f = msg.getFile()) && core_types_pb.InputFileLocation.toObject(includeInstance, f),
    botid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotUpdatePhoto}
 */
proto.msg.BotUpdatePhoto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotUpdatePhoto;
  return proto.msg.BotUpdatePhoto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotUpdatePhoto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotUpdatePhoto}
 */
proto.msg.BotUpdatePhoto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new core_types_pb.InputFileLocation;
      reader.readMessage(value,core_types_pb.InputFileLocation.deserializeBinaryFromReader);
      msg.setFile(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBotid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotUpdatePhoto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotUpdatePhoto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotUpdatePhoto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotUpdatePhoto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFile();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      core_types_pb.InputFileLocation.serializeBinaryToWriter
    );
  }
  f = message.getBotid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional InputFileLocation File = 1;
 * @return {?proto.msg.InputFileLocation}
 */
proto.msg.BotUpdatePhoto.prototype.getFile = function() {
  return /** @type{?proto.msg.InputFileLocation} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputFileLocation, 1));
};


/**
 * @param {?proto.msg.InputFileLocation|undefined} value
 * @return {!proto.msg.BotUpdatePhoto} returns this
*/
proto.msg.BotUpdatePhoto.prototype.setFile = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotUpdatePhoto} returns this
 */
proto.msg.BotUpdatePhoto.prototype.clearFile = function() {
  return this.setFile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotUpdatePhoto.prototype.hasFile = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 BotID = 2;
 * @return {number}
 */
proto.msg.BotUpdatePhoto.prototype.getBotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotUpdatePhoto} returns this
 */
proto.msg.BotUpdatePhoto.prototype.setBotid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotRevokeToken.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotRevokeToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotRevokeToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotRevokeToken.toObject = function(includeInstance, msg) {
  var f, obj = {
    botid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    getnew: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotRevokeToken}
 */
proto.msg.BotRevokeToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotRevokeToken;
  return proto.msg.BotRevokeToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotRevokeToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotRevokeToken}
 */
proto.msg.BotRevokeToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBotid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGetnew(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotRevokeToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotRevokeToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotRevokeToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotRevokeToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBotid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getGetnew();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional int64 BotID = 1;
 * @return {number}
 */
proto.msg.BotRevokeToken.prototype.getBotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotRevokeToken} returns this
 */
proto.msg.BotRevokeToken.prototype.setBotid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool GetNew = 2;
 * @return {boolean}
 */
proto.msg.BotRevokeToken.prototype.getGetnew = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.BotRevokeToken} returns this
 */
proto.msg.BotRevokeToken.prototype.setGetnew = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.BotDeleteMessage.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotDeleteMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotDeleteMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotDeleteMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotDeleteMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && core_types_pb.InputPeer.toObject(includeInstance, f),
    messageidsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotDeleteMessage}
 */
proto.msg.BotDeleteMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotDeleteMessage;
  return proto.msg.BotDeleteMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotDeleteMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotDeleteMessage}
 */
proto.msg.BotDeleteMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new core_types_pb.InputPeer;
      reader.readMessage(value,core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addMessageids(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotDeleteMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotDeleteMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotDeleteMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotDeleteMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = message.getMessageidsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      2,
      f
    );
  }
};


/**
 * optional InputPeer Peer = 1;
 * @return {?proto.msg.InputPeer}
 */
proto.msg.BotDeleteMessage.prototype.getPeer = function() {
  return /** @type{?proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputPeer, 1));
};


/**
 * @param {?proto.msg.InputPeer|undefined} value
 * @return {!proto.msg.BotDeleteMessage} returns this
*/
proto.msg.BotDeleteMessage.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotDeleteMessage} returns this
 */
proto.msg.BotDeleteMessage.prototype.clearPeer = function() {
  return this.setPeer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotDeleteMessage.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated int64 MessageIDs = 2;
 * @return {!Array<number>}
 */
proto.msg.BotDeleteMessage.prototype.getMessageidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.msg.BotDeleteMessage} returns this
 */
proto.msg.BotDeleteMessage.prototype.setMessageidsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.msg.BotDeleteMessage} returns this
 */
proto.msg.BotDeleteMessage.prototype.addMessageids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.BotDeleteMessage} returns this
 */
proto.msg.BotDeleteMessage.prototype.clearMessageidsList = function() {
  return this.setMessageidsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotSetCallbackAnswer.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotSetCallbackAnswer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotSetCallbackAnswer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotSetCallbackAnswer.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryid: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    url: jspb.Message.getFieldWithDefault(msg, 2, ""),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cachetime: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotSetCallbackAnswer}
 */
proto.msg.BotSetCallbackAnswer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotSetCallbackAnswer;
  return proto.msg.BotSetCallbackAnswer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotSetCallbackAnswer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotSetCallbackAnswer}
 */
proto.msg.BotSetCallbackAnswer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setQueryid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCachetime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotSetCallbackAnswer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotSetCallbackAnswer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotSetCallbackAnswer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotSetCallbackAnswer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCachetime();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int64 QueryID = 1;
 * @return {string}
 */
proto.msg.BotSetCallbackAnswer.prototype.getQueryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotSetCallbackAnswer} returns this
 */
proto.msg.BotSetCallbackAnswer.prototype.setQueryid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string Url = 2;
 * @return {string}
 */
proto.msg.BotSetCallbackAnswer.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotSetCallbackAnswer} returns this
 */
proto.msg.BotSetCallbackAnswer.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Message = 3;
 * @return {string}
 */
proto.msg.BotSetCallbackAnswer.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotSetCallbackAnswer} returns this
 */
proto.msg.BotSetCallbackAnswer.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 CacheTime = 4;
 * @return {number}
 */
proto.msg.BotSetCallbackAnswer.prototype.getCachetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotSetCallbackAnswer} returns this
 */
proto.msg.BotSetCallbackAnswer.prototype.setCachetime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotGetCallbackAnswer.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotGetCallbackAnswer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotGetCallbackAnswer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotGetCallbackAnswer.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && core_types_pb.InputPeer.toObject(includeInstance, f),
    messageid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    data: msg.getData_asB64(),
    bot: (f = msg.getBot()) && core_types_pb.InputUser.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotGetCallbackAnswer}
 */
proto.msg.BotGetCallbackAnswer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotGetCallbackAnswer;
  return proto.msg.BotGetCallbackAnswer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotGetCallbackAnswer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotGetCallbackAnswer}
 */
proto.msg.BotGetCallbackAnswer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new core_types_pb.InputPeer;
      reader.readMessage(value,core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMessageid(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 4:
      var value = new core_types_pb.InputUser;
      reader.readMessage(value,core_types_pb.InputUser.deserializeBinaryFromReader);
      msg.setBot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotGetCallbackAnswer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotGetCallbackAnswer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotGetCallbackAnswer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotGetCallbackAnswer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = message.getMessageid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getBot();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      core_types_pb.InputUser.serializeBinaryToWriter
    );
  }
};


/**
 * optional InputPeer Peer = 1;
 * @return {?proto.msg.InputPeer}
 */
proto.msg.BotGetCallbackAnswer.prototype.getPeer = function() {
  return /** @type{?proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputPeer, 1));
};


/**
 * @param {?proto.msg.InputPeer|undefined} value
 * @return {!proto.msg.BotGetCallbackAnswer} returns this
*/
proto.msg.BotGetCallbackAnswer.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotGetCallbackAnswer} returns this
 */
proto.msg.BotGetCallbackAnswer.prototype.clearPeer = function() {
  return this.setPeer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotGetCallbackAnswer.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 MessageID = 2;
 * @return {number}
 */
proto.msg.BotGetCallbackAnswer.prototype.getMessageid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotGetCallbackAnswer} returns this
 */
proto.msg.BotGetCallbackAnswer.prototype.setMessageid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes Data = 3;
 * @return {!(string|Uint8Array)}
 */
proto.msg.BotGetCallbackAnswer.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes Data = 3;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.msg.BotGetCallbackAnswer.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes Data = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.msg.BotGetCallbackAnswer.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.msg.BotGetCallbackAnswer} returns this
 */
proto.msg.BotGetCallbackAnswer.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional InputUser Bot = 4;
 * @return {?proto.msg.InputUser}
 */
proto.msg.BotGetCallbackAnswer.prototype.getBot = function() {
  return /** @type{?proto.msg.InputUser} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputUser, 4));
};


/**
 * @param {?proto.msg.InputUser|undefined} value
 * @return {!proto.msg.BotGetCallbackAnswer} returns this
*/
proto.msg.BotGetCallbackAnswer.prototype.setBot = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotGetCallbackAnswer} returns this
 */
proto.msg.BotGetCallbackAnswer.prototype.clearBot = function() {
  return this.setBot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotGetCallbackAnswer.prototype.hasBot = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotGetInlineResults.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotGetInlineResults.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotGetInlineResults} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotGetInlineResults.toObject = function(includeInstance, msg) {
  var f, obj = {
    bot: (f = msg.getBot()) && core_types_pb.InputUser.toObject(includeInstance, f),
    peer: (f = msg.getPeer()) && core_types_pb.InputPeer.toObject(includeInstance, f),
    query: jspb.Message.getFieldWithDefault(msg, 3, ""),
    offset: jspb.Message.getFieldWithDefault(msg, 4, ""),
    location: (f = msg.getLocation()) && core_types_pb.InputGeoLocation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotGetInlineResults}
 */
proto.msg.BotGetInlineResults.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotGetInlineResults;
  return proto.msg.BotGetInlineResults.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotGetInlineResults} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotGetInlineResults}
 */
proto.msg.BotGetInlineResults.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new core_types_pb.InputUser;
      reader.readMessage(value,core_types_pb.InputUser.deserializeBinaryFromReader);
      msg.setBot(value);
      break;
    case 2:
      var value = new core_types_pb.InputPeer;
      reader.readMessage(value,core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOffset(value);
      break;
    case 5:
      var value = new core_types_pb.InputGeoLocation;
      reader.readMessage(value,core_types_pb.InputGeoLocation.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotGetInlineResults.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotGetInlineResults.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotGetInlineResults} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotGetInlineResults.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBot();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      core_types_pb.InputUser.serializeBinaryToWriter
    );
  }
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOffset();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      core_types_pb.InputGeoLocation.serializeBinaryToWriter
    );
  }
};


/**
 * optional InputUser Bot = 1;
 * @return {?proto.msg.InputUser}
 */
proto.msg.BotGetInlineResults.prototype.getBot = function() {
  return /** @type{?proto.msg.InputUser} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputUser, 1));
};


/**
 * @param {?proto.msg.InputUser|undefined} value
 * @return {!proto.msg.BotGetInlineResults} returns this
*/
proto.msg.BotGetInlineResults.prototype.setBot = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotGetInlineResults} returns this
 */
proto.msg.BotGetInlineResults.prototype.clearBot = function() {
  return this.setBot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotGetInlineResults.prototype.hasBot = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional InputPeer Peer = 2;
 * @return {?proto.msg.InputPeer}
 */
proto.msg.BotGetInlineResults.prototype.getPeer = function() {
  return /** @type{?proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputPeer, 2));
};


/**
 * @param {?proto.msg.InputPeer|undefined} value
 * @return {!proto.msg.BotGetInlineResults} returns this
*/
proto.msg.BotGetInlineResults.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotGetInlineResults} returns this
 */
proto.msg.BotGetInlineResults.prototype.clearPeer = function() {
  return this.setPeer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotGetInlineResults.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string Query = 3;
 * @return {string}
 */
proto.msg.BotGetInlineResults.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotGetInlineResults} returns this
 */
proto.msg.BotGetInlineResults.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Offset = 4;
 * @return {string}
 */
proto.msg.BotGetInlineResults.prototype.getOffset = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotGetInlineResults} returns this
 */
proto.msg.BotGetInlineResults.prototype.setOffset = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional InputGeoLocation Location = 5;
 * @return {?proto.msg.InputGeoLocation}
 */
proto.msg.BotGetInlineResults.prototype.getLocation = function() {
  return /** @type{?proto.msg.InputGeoLocation} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputGeoLocation, 5));
};


/**
 * @param {?proto.msg.InputGeoLocation|undefined} value
 * @return {!proto.msg.BotGetInlineResults} returns this
*/
proto.msg.BotGetInlineResults.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotGetInlineResults} returns this
 */
proto.msg.BotGetInlineResults.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotGetInlineResults.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.BotSetInlineResults.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotSetInlineResults.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotSetInlineResults.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotSetInlineResults} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotSetInlineResults.toObject = function(includeInstance, msg) {
  var f, obj = {
    gallery: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    pb_private: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    cachetime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    nextoffset: jspb.Message.getFieldWithDefault(msg, 4, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.msg.InputBotInlineResult.toObject, includeInstance),
    switchpm: (f = msg.getSwitchpm()) && proto.msg.BotInlineSwitchPM.toObject(includeInstance, f),
    queryid: jspb.Message.getFieldWithDefault(msg, 7, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotSetInlineResults}
 */
proto.msg.BotSetInlineResults.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotSetInlineResults;
  return proto.msg.BotSetInlineResults.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotSetInlineResults} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotSetInlineResults}
 */
proto.msg.BotSetInlineResults.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGallery(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPrivate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCachetime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextoffset(value);
      break;
    case 5:
      var value = new proto.msg.InputBotInlineResult;
      reader.readMessage(value,proto.msg.InputBotInlineResult.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 6:
      var value = new proto.msg.BotInlineSwitchPM;
      reader.readMessage(value,proto.msg.BotInlineSwitchPM.deserializeBinaryFromReader);
      msg.setSwitchpm(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setQueryid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotSetInlineResults.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotSetInlineResults.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotSetInlineResults} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotSetInlineResults.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGallery();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPrivate();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getCachetime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getNextoffset();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.msg.InputBotInlineResult.serializeBinaryToWriter
    );
  }
  f = message.getSwitchpm();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.msg.BotInlineSwitchPM.serializeBinaryToWriter
    );
  }
  f = message.getQueryid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      7,
      f
    );
  }
};


/**
 * optional bool Gallery = 1;
 * @return {boolean}
 */
proto.msg.BotSetInlineResults.prototype.getGallery = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.BotSetInlineResults} returns this
 */
proto.msg.BotSetInlineResults.prototype.setGallery = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool Private = 2;
 * @return {boolean}
 */
proto.msg.BotSetInlineResults.prototype.getPrivate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.BotSetInlineResults} returns this
 */
proto.msg.BotSetInlineResults.prototype.setPrivate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int64 CacheTime = 3;
 * @return {number}
 */
proto.msg.BotSetInlineResults.prototype.getCachetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotSetInlineResults} returns this
 */
proto.msg.BotSetInlineResults.prototype.setCachetime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string NextOffset = 4;
 * @return {string}
 */
proto.msg.BotSetInlineResults.prototype.getNextoffset = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotSetInlineResults} returns this
 */
proto.msg.BotSetInlineResults.prototype.setNextoffset = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated InputBotInlineResult Results = 5;
 * @return {!Array<!proto.msg.InputBotInlineResult>}
 */
proto.msg.BotSetInlineResults.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.msg.InputBotInlineResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msg.InputBotInlineResult, 5));
};


/**
 * @param {!Array<!proto.msg.InputBotInlineResult>} value
 * @return {!proto.msg.BotSetInlineResults} returns this
*/
proto.msg.BotSetInlineResults.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.msg.InputBotInlineResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.InputBotInlineResult}
 */
proto.msg.BotSetInlineResults.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.msg.InputBotInlineResult, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.BotSetInlineResults} returns this
 */
proto.msg.BotSetInlineResults.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional BotInlineSwitchPM SwitchPM = 6;
 * @return {?proto.msg.BotInlineSwitchPM}
 */
proto.msg.BotSetInlineResults.prototype.getSwitchpm = function() {
  return /** @type{?proto.msg.BotInlineSwitchPM} */ (
    jspb.Message.getWrapperField(this, proto.msg.BotInlineSwitchPM, 6));
};


/**
 * @param {?proto.msg.BotInlineSwitchPM|undefined} value
 * @return {!proto.msg.BotSetInlineResults} returns this
*/
proto.msg.BotSetInlineResults.prototype.setSwitchpm = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotSetInlineResults} returns this
 */
proto.msg.BotSetInlineResults.prototype.clearSwitchpm = function() {
  return this.setSwitchpm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotSetInlineResults.prototype.hasSwitchpm = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int64 QueryID = 7;
 * @return {string}
 */
proto.msg.BotSetInlineResults.prototype.getQueryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, "0"));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotSetInlineResults} returns this
 */
proto.msg.BotSetInlineResults.prototype.setQueryid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotSendInlineResults.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotSendInlineResults.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotSendInlineResults} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotSendInlineResults.toObject = function(includeInstance, msg) {
  var f, obj = {
    randomid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    queryid: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    resultid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cleardraft: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    peer: (f = msg.getPeer()) && core_types_pb.InputPeer.toObject(includeInstance, f),
    replyto: jspb.Message.getFieldWithDefault(msg, 6, 0),
    silent: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    hidevia: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotSendInlineResults}
 */
proto.msg.BotSendInlineResults.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotSendInlineResults;
  return proto.msg.BotSendInlineResults.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotSendInlineResults} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotSendInlineResults}
 */
proto.msg.BotSendInlineResults.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRandomid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setQueryid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setResultid(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCleardraft(value);
      break;
    case 5:
      var value = new core_types_pb.InputPeer;
      reader.readMessage(value,core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReplyto(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSilent(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHidevia(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotSendInlineResults.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotSendInlineResults.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotSendInlineResults} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotSendInlineResults.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRandomid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getQueryid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      2,
      f
    );
  }
  f = message.getResultid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCleardraft();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
  f = message.getReplyto();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getSilent();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getHidevia();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional int64 RandomID = 1;
 * @return {number}
 */
proto.msg.BotSendInlineResults.prototype.getRandomid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotSendInlineResults} returns this
 */
proto.msg.BotSendInlineResults.prototype.setRandomid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 QueryID = 2;
 * @return {string}
 */
proto.msg.BotSendInlineResults.prototype.getQueryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotSendInlineResults} returns this
 */
proto.msg.BotSendInlineResults.prototype.setQueryid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional string ResultID = 3;
 * @return {string}
 */
proto.msg.BotSendInlineResults.prototype.getResultid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotSendInlineResults} returns this
 */
proto.msg.BotSendInlineResults.prototype.setResultid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool ClearDraft = 4;
 * @return {boolean}
 */
proto.msg.BotSendInlineResults.prototype.getCleardraft = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.BotSendInlineResults} returns this
 */
proto.msg.BotSendInlineResults.prototype.setCleardraft = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional InputPeer Peer = 5;
 * @return {?proto.msg.InputPeer}
 */
proto.msg.BotSendInlineResults.prototype.getPeer = function() {
  return /** @type{?proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputPeer, 5));
};


/**
 * @param {?proto.msg.InputPeer|undefined} value
 * @return {!proto.msg.BotSendInlineResults} returns this
*/
proto.msg.BotSendInlineResults.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotSendInlineResults} returns this
 */
proto.msg.BotSendInlineResults.prototype.clearPeer = function() {
  return this.setPeer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotSendInlineResults.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int64 ReplyTo = 6;
 * @return {number}
 */
proto.msg.BotSendInlineResults.prototype.getReplyto = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotSendInlineResults} returns this
 */
proto.msg.BotSendInlineResults.prototype.setReplyto = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool Silent = 7;
 * @return {boolean}
 */
proto.msg.BotSendInlineResults.prototype.getSilent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.BotSendInlineResults} returns this
 */
proto.msg.BotSendInlineResults.prototype.setSilent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool HideVia = 8;
 * @return {boolean}
 */
proto.msg.BotSendInlineResults.prototype.getHidevia = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.BotSendInlineResults} returns this
 */
proto.msg.BotSendInlineResults.prototype.setHidevia = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotUploadWallPaper.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotUploadWallPaper.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotUploadWallPaper} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotUploadWallPaper.toObject = function(includeInstance, msg) {
  var f, obj = {
    file: (f = msg.getFile()) && core_types_pb.InputFileLocation.toObject(includeInstance, f),
    dark: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    pattern: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    settings: (f = msg.getSettings()) && chat_wallpaper_pb.WallPaperSettings.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotUploadWallPaper}
 */
proto.msg.BotUploadWallPaper.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotUploadWallPaper;
  return proto.msg.BotUploadWallPaper.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotUploadWallPaper} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotUploadWallPaper}
 */
proto.msg.BotUploadWallPaper.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new core_types_pb.InputFileLocation;
      reader.readMessage(value,core_types_pb.InputFileLocation.deserializeBinaryFromReader);
      msg.setFile(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDark(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPattern(value);
      break;
    case 4:
      var value = new chat_wallpaper_pb.WallPaperSettings;
      reader.readMessage(value,chat_wallpaper_pb.WallPaperSettings.deserializeBinaryFromReader);
      msg.setSettings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotUploadWallPaper.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotUploadWallPaper.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotUploadWallPaper} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotUploadWallPaper.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFile();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      core_types_pb.InputFileLocation.serializeBinaryToWriter
    );
  }
  f = message.getDark();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getPattern();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSettings();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      chat_wallpaper_pb.WallPaperSettings.serializeBinaryToWriter
    );
  }
};


/**
 * optional InputFileLocation File = 1;
 * @return {?proto.msg.InputFileLocation}
 */
proto.msg.BotUploadWallPaper.prototype.getFile = function() {
  return /** @type{?proto.msg.InputFileLocation} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputFileLocation, 1));
};


/**
 * @param {?proto.msg.InputFileLocation|undefined} value
 * @return {!proto.msg.BotUploadWallPaper} returns this
*/
proto.msg.BotUploadWallPaper.prototype.setFile = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotUploadWallPaper} returns this
 */
proto.msg.BotUploadWallPaper.prototype.clearFile = function() {
  return this.setFile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotUploadWallPaper.prototype.hasFile = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool Dark = 2;
 * @return {boolean}
 */
proto.msg.BotUploadWallPaper.prototype.getDark = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.BotUploadWallPaper} returns this
 */
proto.msg.BotUploadWallPaper.prototype.setDark = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool Pattern = 3;
 * @return {boolean}
 */
proto.msg.BotUploadWallPaper.prototype.getPattern = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.BotUploadWallPaper} returns this
 */
proto.msg.BotUploadWallPaper.prototype.setPattern = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional WallPaperSettings Settings = 4;
 * @return {?proto.msg.WallPaperSettings}
 */
proto.msg.BotUploadWallPaper.prototype.getSettings = function() {
  return /** @type{?proto.msg.WallPaperSettings} */ (
    jspb.Message.getWrapperField(this, chat_wallpaper_pb.WallPaperSettings, 4));
};


/**
 * @param {?proto.msg.WallPaperSettings|undefined} value
 * @return {!proto.msg.BotUploadWallPaper} returns this
*/
proto.msg.BotUploadWallPaper.prototype.setSettings = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotUploadWallPaper} returns this
 */
proto.msg.BotUploadWallPaper.prototype.clearSettings = function() {
  return this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotUploadWallPaper.prototype.hasSettings = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotUploadGif.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotUploadGif.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotUploadGif} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotUploadGif.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 100, ""),
    file: (f = msg.getFile()) && core_types_pb.InputFile.toObject(includeInstance, f),
    thumb: (f = msg.getThumb()) && core_types_pb.InputFile.toObject(includeInstance, f),
    width: jspb.Message.getFieldWithDefault(msg, 3, 0),
    height: jspb.Message.getFieldWithDefault(msg, 4, 0),
    mimetype: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotUploadGif}
 */
proto.msg.BotUploadGif.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotUploadGif;
  return proto.msg.BotUploadGif.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotUploadGif} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotUploadGif}
 */
proto.msg.BotUploadGif.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 100:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 1:
      var value = new core_types_pb.InputFile;
      reader.readMessage(value,core_types_pb.InputFile.deserializeBinaryFromReader);
      msg.setFile(value);
      break;
    case 2:
      var value = new core_types_pb.InputFile;
      reader.readMessage(value,core_types_pb.InputFile.deserializeBinaryFromReader);
      msg.setThumb(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWidth(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeight(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMimetype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotUploadGif.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotUploadGif.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotUploadGif} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotUploadGif.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      100,
      f
    );
  }
  f = message.getFile();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      core_types_pb.InputFile.serializeBinaryToWriter
    );
  }
  f = message.getThumb();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      core_types_pb.InputFile.serializeBinaryToWriter
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getMimetype();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string Token = 100;
 * @return {string}
 */
proto.msg.BotUploadGif.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 100, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotUploadGif} returns this
 */
proto.msg.BotUploadGif.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 100, value);
};


/**
 * optional InputFile File = 1;
 * @return {?proto.msg.InputFile}
 */
proto.msg.BotUploadGif.prototype.getFile = function() {
  return /** @type{?proto.msg.InputFile} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputFile, 1));
};


/**
 * @param {?proto.msg.InputFile|undefined} value
 * @return {!proto.msg.BotUploadGif} returns this
*/
proto.msg.BotUploadGif.prototype.setFile = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotUploadGif} returns this
 */
proto.msg.BotUploadGif.prototype.clearFile = function() {
  return this.setFile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotUploadGif.prototype.hasFile = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional InputFile Thumb = 2;
 * @return {?proto.msg.InputFile}
 */
proto.msg.BotUploadGif.prototype.getThumb = function() {
  return /** @type{?proto.msg.InputFile} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputFile, 2));
};


/**
 * @param {?proto.msg.InputFile|undefined} value
 * @return {!proto.msg.BotUploadGif} returns this
*/
proto.msg.BotUploadGif.prototype.setThumb = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotUploadGif} returns this
 */
proto.msg.BotUploadGif.prototype.clearThumb = function() {
  return this.setThumb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotUploadGif.prototype.hasThumb = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 Width = 3;
 * @return {number}
 */
proto.msg.BotUploadGif.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotUploadGif} returns this
 */
proto.msg.BotUploadGif.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 Height = 4;
 * @return {number}
 */
proto.msg.BotUploadGif.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotUploadGif} returns this
 */
proto.msg.BotUploadGif.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string MimeType = 5;
 * @return {string}
 */
proto.msg.BotUploadGif.prototype.getMimetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotUploadGif} returns this
 */
proto.msg.BotUploadGif.prototype.setMimetype = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.BotResults.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotResults.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotResults.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotResults} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotResults.toObject = function(includeInstance, msg) {
  var f, obj = {
    gallery: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    queryid: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    nextoffset: jspb.Message.getFieldWithDefault(msg, 3, ""),
    switchpm: (f = msg.getSwitchpm()) && proto.msg.BotInlineSwitchPM.toObject(includeInstance, f),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.msg.BotInlineResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotResults}
 */
proto.msg.BotResults.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotResults;
  return proto.msg.BotResults.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotResults} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotResults}
 */
proto.msg.BotResults.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGallery(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setQueryid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextoffset(value);
      break;
    case 4:
      var value = new proto.msg.BotInlineSwitchPM;
      reader.readMessage(value,proto.msg.BotInlineSwitchPM.deserializeBinaryFromReader);
      msg.setSwitchpm(value);
      break;
    case 5:
      var value = new proto.msg.BotInlineResult;
      reader.readMessage(value,proto.msg.BotInlineResult.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotResults.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotResults.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotResults} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotResults.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGallery();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getQueryid();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      2,
      f
    );
  }
  f = message.getNextoffset();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSwitchpm();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.msg.BotInlineSwitchPM.serializeBinaryToWriter
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.msg.BotInlineResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool Gallery = 1;
 * @return {boolean}
 */
proto.msg.BotResults.prototype.getGallery = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.BotResults} returns this
 */
proto.msg.BotResults.prototype.setGallery = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int64 QueryID = 2;
 * @return {string}
 */
proto.msg.BotResults.prototype.getQueryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotResults} returns this
 */
proto.msg.BotResults.prototype.setQueryid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional string NextOffset = 3;
 * @return {string}
 */
proto.msg.BotResults.prototype.getNextoffset = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotResults} returns this
 */
proto.msg.BotResults.prototype.setNextoffset = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional BotInlineSwitchPM SwitchPM = 4;
 * @return {?proto.msg.BotInlineSwitchPM}
 */
proto.msg.BotResults.prototype.getSwitchpm = function() {
  return /** @type{?proto.msg.BotInlineSwitchPM} */ (
    jspb.Message.getWrapperField(this, proto.msg.BotInlineSwitchPM, 4));
};


/**
 * @param {?proto.msg.BotInlineSwitchPM|undefined} value
 * @return {!proto.msg.BotResults} returns this
*/
proto.msg.BotResults.prototype.setSwitchpm = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotResults} returns this
 */
proto.msg.BotResults.prototype.clearSwitchpm = function() {
  return this.setSwitchpm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotResults.prototype.hasSwitchpm = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated BotInlineResult Results = 5;
 * @return {!Array<!proto.msg.BotInlineResult>}
 */
proto.msg.BotResults.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.msg.BotInlineResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msg.BotInlineResult, 5));
};


/**
 * @param {!Array<!proto.msg.BotInlineResult>} value
 * @return {!proto.msg.BotResults} returns this
*/
proto.msg.BotResults.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.msg.BotInlineResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.BotInlineResult}
 */
proto.msg.BotResults.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.msg.BotInlineResult, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.BotResults} returns this
 */
proto.msg.BotResults.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotInlineSwitchPM.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotInlineSwitchPM.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotInlineSwitchPM} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotInlineSwitchPM.toObject = function(includeInstance, msg) {
  var f, obj = {
    text: jspb.Message.getFieldWithDefault(msg, 1, ""),
    startparam: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotInlineSwitchPM}
 */
proto.msg.BotInlineSwitchPM.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotInlineSwitchPM;
  return proto.msg.BotInlineSwitchPM.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotInlineSwitchPM} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotInlineSwitchPM}
 */
proto.msg.BotInlineSwitchPM.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartparam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotInlineSwitchPM.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotInlineSwitchPM.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotInlineSwitchPM} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotInlineSwitchPM.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStartparam();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string Text = 1;
 * @return {string}
 */
proto.msg.BotInlineSwitchPM.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotInlineSwitchPM} returns this
 */
proto.msg.BotInlineSwitchPM.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string StartParam = 2;
 * @return {string}
 */
proto.msg.BotInlineSwitchPM.prototype.getStartparam = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotInlineSwitchPM} returns this
 */
proto.msg.BotInlineSwitchPM.prototype.setStartparam = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotInlineResult.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotInlineResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotInlineResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotInlineResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    url: jspb.Message.getFieldWithDefault(msg, 5, ""),
    thumb: (f = msg.getThumb()) && chat_messages_medias_pb.MediaWebDocument.toObject(includeInstance, f),
    message: (f = msg.getMessage()) && proto.msg.BotInlineMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotInlineResult}
 */
proto.msg.BotInlineResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotInlineResult;
  return proto.msg.BotInlineResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotInlineResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotInlineResult}
 */
proto.msg.BotInlineResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.msg.MediaType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 6:
      var value = new chat_messages_medias_pb.MediaWebDocument;
      reader.readMessage(value,chat_messages_medias_pb.MediaWebDocument.deserializeBinaryFromReader);
      msg.setThumb(value);
      break;
    case 7:
      var value = new proto.msg.BotInlineMessage;
      reader.readMessage(value,proto.msg.BotInlineMessage.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotInlineResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotInlineResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotInlineResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotInlineResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getThumb();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      chat_messages_medias_pb.MediaWebDocument.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.msg.BotInlineMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ID = 1;
 * @return {string}
 */
proto.msg.BotInlineResult.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotInlineResult} returns this
 */
proto.msg.BotInlineResult.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional MediaType Type = 2;
 * @return {!proto.msg.MediaType}
 */
proto.msg.BotInlineResult.prototype.getType = function() {
  return /** @type {!proto.msg.MediaType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.msg.MediaType} value
 * @return {!proto.msg.BotInlineResult} returns this
 */
proto.msg.BotInlineResult.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string Title = 3;
 * @return {string}
 */
proto.msg.BotInlineResult.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotInlineResult} returns this
 */
proto.msg.BotInlineResult.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Description = 4;
 * @return {string}
 */
proto.msg.BotInlineResult.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotInlineResult} returns this
 */
proto.msg.BotInlineResult.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Url = 5;
 * @return {string}
 */
proto.msg.BotInlineResult.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotInlineResult} returns this
 */
proto.msg.BotInlineResult.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional MediaWebDocument Thumb = 6;
 * @return {?proto.msg.MediaWebDocument}
 */
proto.msg.BotInlineResult.prototype.getThumb = function() {
  return /** @type{?proto.msg.MediaWebDocument} */ (
    jspb.Message.getWrapperField(this, chat_messages_medias_pb.MediaWebDocument, 6));
};


/**
 * @param {?proto.msg.MediaWebDocument|undefined} value
 * @return {!proto.msg.BotInlineResult} returns this
*/
proto.msg.BotInlineResult.prototype.setThumb = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotInlineResult} returns this
 */
proto.msg.BotInlineResult.prototype.clearThumb = function() {
  return this.setThumb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotInlineResult.prototype.hasThumb = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional BotInlineMessage Message = 7;
 * @return {?proto.msg.BotInlineMessage}
 */
proto.msg.BotInlineResult.prototype.getMessage = function() {
  return /** @type{?proto.msg.BotInlineMessage} */ (
    jspb.Message.getWrapperField(this, proto.msg.BotInlineMessage, 7));
};


/**
 * @param {?proto.msg.BotInlineMessage|undefined} value
 * @return {!proto.msg.BotInlineResult} returns this
*/
proto.msg.BotInlineResult.prototype.setMessage = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotInlineResult} returns this
 */
proto.msg.BotInlineResult.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotInlineResult.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.InputBotInlineResult.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.InputBotInlineResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.InputBotInlineResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.InputBotInlineResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    url: jspb.Message.getFieldWithDefault(msg, 5, ""),
    thumb: (f = msg.getThumb()) && chat_messages_medias_pb.InputMediaWebDocument.toObject(includeInstance, f),
    message: (f = msg.getMessage()) && proto.msg.InputBotInlineMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.InputBotInlineResult}
 */
proto.msg.InputBotInlineResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.InputBotInlineResult;
  return proto.msg.InputBotInlineResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.InputBotInlineResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.InputBotInlineResult}
 */
proto.msg.InputBotInlineResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.msg.InputMediaType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 6:
      var value = new chat_messages_medias_pb.InputMediaWebDocument;
      reader.readMessage(value,chat_messages_medias_pb.InputMediaWebDocument.deserializeBinaryFromReader);
      msg.setThumb(value);
      break;
    case 8:
      var value = new proto.msg.InputBotInlineMessage;
      reader.readMessage(value,proto.msg.InputBotInlineMessage.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.InputBotInlineResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.InputBotInlineResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.InputBotInlineResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.InputBotInlineResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getThumb();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      chat_messages_medias_pb.InputMediaWebDocument.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.msg.InputBotInlineMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ID = 1;
 * @return {string}
 */
proto.msg.InputBotInlineResult.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.InputBotInlineResult} returns this
 */
proto.msg.InputBotInlineResult.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional InputMediaType Type = 2;
 * @return {!proto.msg.InputMediaType}
 */
proto.msg.InputBotInlineResult.prototype.getType = function() {
  return /** @type {!proto.msg.InputMediaType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.msg.InputMediaType} value
 * @return {!proto.msg.InputBotInlineResult} returns this
 */
proto.msg.InputBotInlineResult.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string Title = 3;
 * @return {string}
 */
proto.msg.InputBotInlineResult.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.InputBotInlineResult} returns this
 */
proto.msg.InputBotInlineResult.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Description = 4;
 * @return {string}
 */
proto.msg.InputBotInlineResult.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.InputBotInlineResult} returns this
 */
proto.msg.InputBotInlineResult.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Url = 5;
 * @return {string}
 */
proto.msg.InputBotInlineResult.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.InputBotInlineResult} returns this
 */
proto.msg.InputBotInlineResult.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional InputMediaWebDocument Thumb = 6;
 * @return {?proto.msg.InputMediaWebDocument}
 */
proto.msg.InputBotInlineResult.prototype.getThumb = function() {
  return /** @type{?proto.msg.InputMediaWebDocument} */ (
    jspb.Message.getWrapperField(this, chat_messages_medias_pb.InputMediaWebDocument, 6));
};


/**
 * @param {?proto.msg.InputMediaWebDocument|undefined} value
 * @return {!proto.msg.InputBotInlineResult} returns this
*/
proto.msg.InputBotInlineResult.prototype.setThumb = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.InputBotInlineResult} returns this
 */
proto.msg.InputBotInlineResult.prototype.clearThumb = function() {
  return this.setThumb(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.InputBotInlineResult.prototype.hasThumb = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional InputBotInlineMessage Message = 8;
 * @return {?proto.msg.InputBotInlineMessage}
 */
proto.msg.InputBotInlineResult.prototype.getMessage = function() {
  return /** @type{?proto.msg.InputBotInlineMessage} */ (
    jspb.Message.getWrapperField(this, proto.msg.InputBotInlineMessage, 8));
};


/**
 * @param {?proto.msg.InputBotInlineMessage|undefined} value
 * @return {!proto.msg.InputBotInlineResult} returns this
*/
proto.msg.InputBotInlineResult.prototype.setMessage = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.InputBotInlineResult} returns this
 */
proto.msg.InputBotInlineResult.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.InputBotInlineResult.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.BotInlineMessage.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotInlineMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotInlineMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotInlineMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotInlineMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    mediadata: msg.getMediadata_asB64(),
    body: jspb.Message.getFieldWithDefault(msg, 10, ""),
    entitiesList: jspb.Message.toObjectList(msg.getEntitiesList(),
    core_types_pb.MessageEntity.toObject, includeInstance),
    replyto: jspb.Message.getFieldWithDefault(msg, 12, 0),
    replymarkup: jspb.Message.getFieldWithDefault(msg, 13, 0),
    replymarkupdata: msg.getReplymarkupdata_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotInlineMessage}
 */
proto.msg.BotInlineMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotInlineMessage;
  return proto.msg.BotInlineMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotInlineMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotInlineMessage}
 */
proto.msg.BotInlineMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMediadata(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 11:
      var value = new core_types_pb.MessageEntity;
      reader.readMessage(value,core_types_pb.MessageEntity.deserializeBinaryFromReader);
      msg.addEntities(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReplyto(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReplymarkup(value);
      break;
    case 14:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setReplymarkupdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotInlineMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotInlineMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotInlineMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotInlineMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMediadata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      core_types_pb.MessageEntity.serializeBinaryToWriter
    );
  }
  f = message.getReplyto();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getReplymarkup();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getReplymarkupdata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      14,
      f
    );
  }
};


/**
 * optional bytes MediaData = 1;
 * @return {!(string|Uint8Array)}
 */
proto.msg.BotInlineMessage.prototype.getMediadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes MediaData = 1;
 * This is a type-conversion wrapper around `getMediadata()`
 * @return {string}
 */
proto.msg.BotInlineMessage.prototype.getMediadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMediadata()));
};


/**
 * optional bytes MediaData = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMediadata()`
 * @return {!Uint8Array}
 */
proto.msg.BotInlineMessage.prototype.getMediadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMediadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.msg.BotInlineMessage} returns this
 */
proto.msg.BotInlineMessage.prototype.setMediadata = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string Body = 10;
 * @return {string}
 */
proto.msg.BotInlineMessage.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotInlineMessage} returns this
 */
proto.msg.BotInlineMessage.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated MessageEntity Entities = 11;
 * @return {!Array<!proto.msg.MessageEntity>}
 */
proto.msg.BotInlineMessage.prototype.getEntitiesList = function() {
  return /** @type{!Array<!proto.msg.MessageEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.MessageEntity, 11));
};


/**
 * @param {!Array<!proto.msg.MessageEntity>} value
 * @return {!proto.msg.BotInlineMessage} returns this
*/
proto.msg.BotInlineMessage.prototype.setEntitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.msg.MessageEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.MessageEntity}
 */
proto.msg.BotInlineMessage.prototype.addEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.msg.MessageEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.BotInlineMessage} returns this
 */
proto.msg.BotInlineMessage.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};


/**
 * optional int64 ReplyTo = 12;
 * @return {number}
 */
proto.msg.BotInlineMessage.prototype.getReplyto = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotInlineMessage} returns this
 */
proto.msg.BotInlineMessage.prototype.setReplyto = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 ReplyMarkup = 13;
 * @return {number}
 */
proto.msg.BotInlineMessage.prototype.getReplymarkup = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotInlineMessage} returns this
 */
proto.msg.BotInlineMessage.prototype.setReplymarkup = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bytes ReplyMarkupData = 14;
 * @return {!(string|Uint8Array)}
 */
proto.msg.BotInlineMessage.prototype.getReplymarkupdata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * optional bytes ReplyMarkupData = 14;
 * This is a type-conversion wrapper around `getReplymarkupdata()`
 * @return {string}
 */
proto.msg.BotInlineMessage.prototype.getReplymarkupdata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getReplymarkupdata()));
};


/**
 * optional bytes ReplyMarkupData = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getReplymarkupdata()`
 * @return {!Uint8Array}
 */
proto.msg.BotInlineMessage.prototype.getReplymarkupdata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getReplymarkupdata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.msg.BotInlineMessage} returns this
 */
proto.msg.BotInlineMessage.prototype.setReplymarkupdata = function(value) {
  return jspb.Message.setProto3BytesField(this, 14, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.InputBotInlineMessage.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.InputBotInlineMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.InputBotInlineMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.InputBotInlineMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.InputBotInlineMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputmediadata: msg.getInputmediadata_asB64(),
    nowebpage: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    body: jspb.Message.getFieldWithDefault(msg, 10, ""),
    entitiesList: jspb.Message.toObjectList(msg.getEntitiesList(),
    core_types_pb.MessageEntity.toObject, includeInstance),
    replyto: jspb.Message.getFieldWithDefault(msg, 12, 0),
    replymarkup: jspb.Message.getFieldWithDefault(msg, 13, 0),
    replymarkupdata: msg.getReplymarkupdata_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.InputBotInlineMessage}
 */
proto.msg.InputBotInlineMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.InputBotInlineMessage;
  return proto.msg.InputBotInlineMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.InputBotInlineMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.InputBotInlineMessage}
 */
proto.msg.InputBotInlineMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setInputmediadata(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNowebpage(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 11:
      var value = new core_types_pb.MessageEntity;
      reader.readMessage(value,core_types_pb.MessageEntity.deserializeBinaryFromReader);
      msg.addEntities(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReplyto(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReplymarkup(value);
      break;
    case 14:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setReplymarkupdata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.InputBotInlineMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.InputBotInlineMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.InputBotInlineMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.InputBotInlineMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInputmediadata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getNowebpage();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      core_types_pb.MessageEntity.serializeBinaryToWriter
    );
  }
  f = message.getReplyto();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getReplymarkup();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getReplymarkupdata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      14,
      f
    );
  }
};


/**
 * optional bytes InputMediaData = 1;
 * @return {!(string|Uint8Array)}
 */
proto.msg.InputBotInlineMessage.prototype.getInputmediadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes InputMediaData = 1;
 * This is a type-conversion wrapper around `getInputmediadata()`
 * @return {string}
 */
proto.msg.InputBotInlineMessage.prototype.getInputmediadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getInputmediadata()));
};


/**
 * optional bytes InputMediaData = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getInputmediadata()`
 * @return {!Uint8Array}
 */
proto.msg.InputBotInlineMessage.prototype.getInputmediadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getInputmediadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.msg.InputBotInlineMessage} returns this
 */
proto.msg.InputBotInlineMessage.prototype.setInputmediadata = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bool NoWebPage = 2;
 * @return {boolean}
 */
proto.msg.InputBotInlineMessage.prototype.getNowebpage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.InputBotInlineMessage} returns this
 */
proto.msg.InputBotInlineMessage.prototype.setNowebpage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string Body = 10;
 * @return {string}
 */
proto.msg.InputBotInlineMessage.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.InputBotInlineMessage} returns this
 */
proto.msg.InputBotInlineMessage.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated MessageEntity Entities = 11;
 * @return {!Array<!proto.msg.MessageEntity>}
 */
proto.msg.InputBotInlineMessage.prototype.getEntitiesList = function() {
  return /** @type{!Array<!proto.msg.MessageEntity>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.MessageEntity, 11));
};


/**
 * @param {!Array<!proto.msg.MessageEntity>} value
 * @return {!proto.msg.InputBotInlineMessage} returns this
*/
proto.msg.InputBotInlineMessage.prototype.setEntitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.msg.MessageEntity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.MessageEntity}
 */
proto.msg.InputBotInlineMessage.prototype.addEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.msg.MessageEntity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.InputBotInlineMessage} returns this
 */
proto.msg.InputBotInlineMessage.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};


/**
 * optional int64 ReplyTo = 12;
 * @return {number}
 */
proto.msg.InputBotInlineMessage.prototype.getReplyto = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.InputBotInlineMessage} returns this
 */
proto.msg.InputBotInlineMessage.prototype.setReplyto = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 ReplyMarkup = 13;
 * @return {number}
 */
proto.msg.InputBotInlineMessage.prototype.getReplymarkup = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.InputBotInlineMessage} returns this
 */
proto.msg.InputBotInlineMessage.prototype.setReplymarkup = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bytes ReplyMarkupData = 14;
 * @return {!(string|Uint8Array)}
 */
proto.msg.InputBotInlineMessage.prototype.getReplymarkupdata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * optional bytes ReplyMarkupData = 14;
 * This is a type-conversion wrapper around `getReplymarkupdata()`
 * @return {string}
 */
proto.msg.InputBotInlineMessage.prototype.getReplymarkupdata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getReplymarkupdata()));
};


/**
 * optional bytes ReplyMarkupData = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getReplymarkupdata()`
 * @return {!Uint8Array}
 */
proto.msg.InputBotInlineMessage.prototype.getReplymarkupdata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getReplymarkupdata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.msg.InputBotInlineMessage} returns this
 */
proto.msg.InputBotInlineMessage.prototype.setReplymarkupdata = function(value) {
  return jspb.Message.setProto3BytesField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotToken.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotToken.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: msg.getToken_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotToken}
 */
proto.msg.BotToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotToken;
  return proto.msg.BotToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotToken}
 */
proto.msg.BotToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes Token = 1;
 * @return {!(string|Uint8Array)}
 */
proto.msg.BotToken.prototype.getToken = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes Token = 1;
 * This is a type-conversion wrapper around `getToken()`
 * @return {string}
 */
proto.msg.BotToken.prototype.getToken_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getToken()));
};


/**
 * optional bytes Token = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getToken()`
 * @return {!Uint8Array}
 */
proto.msg.BotToken.prototype.getToken_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getToken()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.msg.BotToken} returns this
 */
proto.msg.BotToken.prototype.setToken = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotRecalled.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotRecalled.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotRecalled} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotRecalled.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    username: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotRecalled}
 */
proto.msg.BotRecalled.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotRecalled;
  return proto.msg.BotRecalled.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotRecalled} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotRecalled}
 */
proto.msg.BotRecalled.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotRecalled.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotRecalled.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotRecalled} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotRecalled.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 ID = 1;
 * @return {number}
 */
proto.msg.BotRecalled.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotRecalled} returns this
 */
proto.msg.BotRecalled.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Username = 2;
 * @return {string}
 */
proto.msg.BotRecalled.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotRecalled} returns this
 */
proto.msg.BotRecalled.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotCallbackAnswer.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotCallbackAnswer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotCallbackAnswer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotCallbackAnswer.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cachetime: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotCallbackAnswer}
 */
proto.msg.BotCallbackAnswer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotCallbackAnswer;
  return proto.msg.BotCallbackAnswer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotCallbackAnswer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotCallbackAnswer}
 */
proto.msg.BotCallbackAnswer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCachetime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotCallbackAnswer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotCallbackAnswer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotCallbackAnswer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotCallbackAnswer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCachetime();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string Url = 1;
 * @return {string}
 */
proto.msg.BotCallbackAnswer.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotCallbackAnswer} returns this
 */
proto.msg.BotCallbackAnswer.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Message = 2;
 * @return {string}
 */
proto.msg.BotCallbackAnswer.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.BotCallbackAnswer} returns this
 */
proto.msg.BotCallbackAnswer.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 CacheTime = 3;
 * @return {number}
 */
proto.msg.BotCallbackAnswer.prototype.getCachetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.BotCallbackAnswer} returns this
 */
proto.msg.BotCallbackAnswer.prototype.setCachetime = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.BotsMany.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotsMany.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotsMany.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotsMany} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotsMany.toObject = function(includeInstance, msg) {
  var f, obj = {
    botsList: jspb.Message.toObjectList(msg.getBotsList(),
    core_types_pb.BotInfo.toObject, includeInstance),
    empty: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotsMany}
 */
proto.msg.BotsMany.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotsMany;
  return proto.msg.BotsMany.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotsMany} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotsMany}
 */
proto.msg.BotsMany.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new core_types_pb.BotInfo;
      reader.readMessage(value,core_types_pb.BotInfo.deserializeBinaryFromReader);
      msg.addBots(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmpty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotsMany.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotsMany.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotsMany} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotsMany.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      core_types_pb.BotInfo.serializeBinaryToWriter
    );
  }
  f = message.getEmpty();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * repeated BotInfo Bots = 1;
 * @return {!Array<!proto.msg.BotInfo>}
 */
proto.msg.BotsMany.prototype.getBotsList = function() {
  return /** @type{!Array<!proto.msg.BotInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.BotInfo, 1));
};


/**
 * @param {!Array<!proto.msg.BotInfo>} value
 * @return {!proto.msg.BotsMany} returns this
*/
proto.msg.BotsMany.prototype.setBotsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msg.BotInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.BotInfo}
 */
proto.msg.BotsMany.prototype.addBots = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msg.BotInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.BotsMany} returns this
 */
proto.msg.BotsMany.prototype.clearBotsList = function() {
  return this.setBotsList([]);
};


/**
 * optional bool Empty = 2;
 * @return {boolean}
 */
proto.msg.BotsMany.prototype.getEmpty = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.BotsMany} returns this
 */
proto.msg.BotsMany.prototype.setEmpty = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotGetCommands.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotGetCommands.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotGetCommands} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotGetCommands.toObject = function(includeInstance, msg) {
  var f, obj = {
    peer: (f = msg.getPeer()) && core_types_pb.InputPeer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotGetCommands}
 */
proto.msg.BotGetCommands.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotGetCommands;
  return proto.msg.BotGetCommands.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotGetCommands} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotGetCommands}
 */
proto.msg.BotGetCommands.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new core_types_pb.InputPeer;
      reader.readMessage(value,core_types_pb.InputPeer.deserializeBinaryFromReader);
      msg.setPeer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotGetCommands.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotGetCommands.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotGetCommands} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotGetCommands.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      core_types_pb.InputPeer.serializeBinaryToWriter
    );
  }
};


/**
 * optional InputPeer Peer = 1;
 * @return {?proto.msg.InputPeer}
 */
proto.msg.BotGetCommands.prototype.getPeer = function() {
  return /** @type{?proto.msg.InputPeer} */ (
    jspb.Message.getWrapperField(this, core_types_pb.InputPeer, 1));
};


/**
 * @param {?proto.msg.InputPeer|undefined} value
 * @return {!proto.msg.BotGetCommands} returns this
*/
proto.msg.BotGetCommands.prototype.setPeer = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.msg.BotGetCommands} returns this
 */
proto.msg.BotGetCommands.prototype.clearPeer = function() {
  return this.setPeer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.msg.BotGetCommands.prototype.hasPeer = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.BotCommandsMany.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.BotCommandsMany.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.BotCommandsMany.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.BotCommandsMany} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotCommandsMany.toObject = function(includeInstance, msg) {
  var f, obj = {
    commandsList: jspb.Message.toObjectList(msg.getCommandsList(),
    core_types_pb.BotCommands.toObject, includeInstance),
    empty: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.BotCommandsMany}
 */
proto.msg.BotCommandsMany.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.BotCommandsMany;
  return proto.msg.BotCommandsMany.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.BotCommandsMany} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.BotCommandsMany}
 */
proto.msg.BotCommandsMany.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new core_types_pb.BotCommands;
      reader.readMessage(value,core_types_pb.BotCommands.deserializeBinaryFromReader);
      msg.addCommands(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmpty(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.BotCommandsMany.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.BotCommandsMany.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.BotCommandsMany} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.BotCommandsMany.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommandsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      core_types_pb.BotCommands.serializeBinaryToWriter
    );
  }
  f = message.getEmpty();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * repeated BotCommands Commands = 1;
 * @return {!Array<!proto.msg.BotCommands>}
 */
proto.msg.BotCommandsMany.prototype.getCommandsList = function() {
  return /** @type{!Array<!proto.msg.BotCommands>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.BotCommands, 1));
};


/**
 * @param {!Array<!proto.msg.BotCommands>} value
 * @return {!proto.msg.BotCommandsMany} returns this
*/
proto.msg.BotCommandsMany.prototype.setCommandsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msg.BotCommands=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.BotCommands}
 */
proto.msg.BotCommandsMany.prototype.addCommands = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msg.BotCommands, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.BotCommandsMany} returns this
 */
proto.msg.BotCommandsMany.prototype.clearCommandsList = function() {
  return this.setCommandsList([]);
};


/**
 * optional bool Empty = 2;
 * @return {boolean}
 */
proto.msg.BotCommandsMany.prototype.getEmpty = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.BotCommandsMany} returns this
 */
proto.msg.BotCommandsMany.prototype.setEmpty = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


goog.object.extend(exports, proto.msg);
