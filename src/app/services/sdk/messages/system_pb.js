/* eslint-disable */
// source: system.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var core_types_pb = require('./core.types_pb.js');
goog.object.extend(proto, core_types_pb);
goog.exportSymbol('proto.msg.AppUpdate', null, global);
goog.exportSymbol('proto.msg.ClientUsage', null, global);
goog.exportSymbol('proto.msg.DataCenter', null, global);
goog.exportSymbol('proto.msg.SystemConfig', null, global);
goog.exportSymbol('proto.msg.SystemGetConfig', null, global);
goog.exportSymbol('proto.msg.SystemGetInfo', null, global);
goog.exportSymbol('proto.msg.SystemGetResponse', null, global);
goog.exportSymbol('proto.msg.SystemGetSalts', null, global);
goog.exportSymbol('proto.msg.SystemGetServerKeys', null, global);
goog.exportSymbol('proto.msg.SystemGetServerTime', null, global);
goog.exportSymbol('proto.msg.SystemInfo', null, global);
goog.exportSymbol('proto.msg.SystemKeys', null, global);
goog.exportSymbol('proto.msg.SystemSalts', null, global);
goog.exportSymbol('proto.msg.SystemServerTime', null, global);
goog.exportSymbol('proto.msg.SystemUploadUsage', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemGetServerKeys = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.SystemGetServerKeys, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemGetServerKeys.displayName = 'proto.msg.SystemGetServerKeys';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemGetServerTime = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.SystemGetServerTime, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemGetServerTime.displayName = 'proto.msg.SystemGetServerTime';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemGetInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.SystemGetInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemGetInfo.displayName = 'proto.msg.SystemGetInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemGetSalts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.SystemGetSalts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemGetSalts.displayName = 'proto.msg.SystemGetSalts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemGetConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.SystemGetConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemGetConfig.displayName = 'proto.msg.SystemGetConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemUploadUsage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.SystemUploadUsage.repeatedFields_, null);
};
goog.inherits(proto.msg.SystemUploadUsage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemUploadUsage.displayName = 'proto.msg.SystemUploadUsage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemGetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.SystemGetResponse.repeatedFields_, null);
};
goog.inherits(proto.msg.SystemGetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemGetResponse.displayName = 'proto.msg.SystemGetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.ClientUsage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.ClientUsage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.ClientUsage.displayName = 'proto.msg.ClientUsage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.SystemConfig.repeatedFields_, null);
};
goog.inherits(proto.msg.SystemConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemConfig.displayName = 'proto.msg.SystemConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.DataCenter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.DataCenter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.DataCenter.displayName = 'proto.msg.DataCenter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemSalts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.SystemSalts.repeatedFields_, null);
};
goog.inherits(proto.msg.SystemSalts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemSalts.displayName = 'proto.msg.SystemSalts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.AppUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.AppUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.AppUpdate.displayName = 'proto.msg.AppUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.SystemInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemInfo.displayName = 'proto.msg.SystemInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemServerTime = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg.SystemServerTime, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemServerTime.displayName = 'proto.msg.SystemServerTime';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg.SystemKeys = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg.SystemKeys.repeatedFields_, null);
};
goog.inherits(proto.msg.SystemKeys, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg.SystemKeys.displayName = 'proto.msg.SystemKeys';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemGetServerKeys.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemGetServerKeys.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemGetServerKeys} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetServerKeys.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemGetServerKeys}
 */
proto.msg.SystemGetServerKeys.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemGetServerKeys;
  return proto.msg.SystemGetServerKeys.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemGetServerKeys} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemGetServerKeys}
 */
proto.msg.SystemGetServerKeys.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemGetServerKeys.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemGetServerKeys.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemGetServerKeys} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetServerKeys.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemGetServerTime.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemGetServerTime.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemGetServerTime} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetServerTime.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemGetServerTime}
 */
proto.msg.SystemGetServerTime.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemGetServerTime;
  return proto.msg.SystemGetServerTime.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemGetServerTime} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemGetServerTime}
 */
proto.msg.SystemGetServerTime.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemGetServerTime.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemGetServerTime.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemGetServerTime} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetServerTime.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemGetInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemGetInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemGetInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetInfo.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemGetInfo}
 */
proto.msg.SystemGetInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemGetInfo;
  return proto.msg.SystemGetInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemGetInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemGetInfo}
 */
proto.msg.SystemGetInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemGetInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemGetInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemGetInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemGetSalts.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemGetSalts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemGetSalts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetSalts.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemGetSalts}
 */
proto.msg.SystemGetSalts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemGetSalts;
  return proto.msg.SystemGetSalts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemGetSalts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemGetSalts}
 */
proto.msg.SystemGetSalts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemGetSalts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemGetSalts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemGetSalts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetSalts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemGetConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemGetConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemGetConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetConfig.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemGetConfig}
 */
proto.msg.SystemGetConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemGetConfig;
  return proto.msg.SystemGetConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemGetConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemGetConfig}
 */
proto.msg.SystemGetConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemGetConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemGetConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemGetConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.SystemUploadUsage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemUploadUsage.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemUploadUsage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemUploadUsage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemUploadUsage.toObject = function(includeInstance, msg) {
  var f, obj = {
    usageList: jspb.Message.toObjectList(msg.getUsageList(),
    proto.msg.ClientUsage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemUploadUsage}
 */
proto.msg.SystemUploadUsage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemUploadUsage;
  return proto.msg.SystemUploadUsage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemUploadUsage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemUploadUsage}
 */
proto.msg.SystemUploadUsage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.msg.ClientUsage;
      reader.readMessage(value,proto.msg.ClientUsage.deserializeBinaryFromReader);
      msg.addUsage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemUploadUsage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemUploadUsage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemUploadUsage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemUploadUsage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.msg.ClientUsage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ClientUsage Usage = 1;
 * @return {!Array<!proto.msg.ClientUsage>}
 */
proto.msg.SystemUploadUsage.prototype.getUsageList = function() {
  return /** @type{!Array<!proto.msg.ClientUsage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msg.ClientUsage, 1));
};


/**
 * @param {!Array<!proto.msg.ClientUsage>} value
 * @return {!proto.msg.SystemUploadUsage} returns this
*/
proto.msg.SystemUploadUsage.prototype.setUsageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msg.ClientUsage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.ClientUsage}
 */
proto.msg.SystemUploadUsage.prototype.addUsage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msg.ClientUsage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.SystemUploadUsage} returns this
 */
proto.msg.SystemUploadUsage.prototype.clearUsageList = function() {
  return this.setUsageList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.SystemGetResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemGetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemGetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemGetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestidsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemGetResponse}
 */
proto.msg.SystemGetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemGetResponse;
  return proto.msg.SystemGetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemGetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemGetResponse}
 */
proto.msg.SystemGetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedFixed64());
      msg.setRequestidsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemGetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemGetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemGetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemGetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestidsList();
  if (f.length > 0) {
    writer.writePackedFixed64(
      1,
      f
    );
  }
};


/**
 * repeated fixed64 RequestIDs = 1;
 * @return {!Array<number>}
 */
proto.msg.SystemGetResponse.prototype.getRequestidsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.msg.SystemGetResponse} returns this
 */
proto.msg.SystemGetResponse.prototype.setRequestidsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.msg.SystemGetResponse} returns this
 */
proto.msg.SystemGetResponse.prototype.addRequestids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.SystemGetResponse} returns this
 */
proto.msg.SystemGetResponse.prototype.clearRequestidsList = function() {
  return this.setRequestidsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.ClientUsage.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.ClientUsage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.ClientUsage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.ClientUsage.toObject = function(includeInstance, msg) {
  var f, obj = {
    year: jspb.Message.getFieldWithDefault(msg, 1, 0),
    month: jspb.Message.getFieldWithDefault(msg, 2, 0),
    day: jspb.Message.getFieldWithDefault(msg, 3, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    foregroundtime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    avgresponsetime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    totalrequests: jspb.Message.getFieldWithDefault(msg, 7, 0),
    receivedmessages: jspb.Message.getFieldWithDefault(msg, 8, 0),
    sentmessages: jspb.Message.getFieldWithDefault(msg, 9, 0),
    receivedmedia: jspb.Message.getFieldWithDefault(msg, 10, 0),
    sentmedia: jspb.Message.getFieldWithDefault(msg, 11, 0),
    uploadbytes: jspb.Message.getFieldWithDefault(msg, 12, 0),
    downloadbytes: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.ClientUsage}
 */
proto.msg.ClientUsage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.ClientUsage;
  return proto.msg.ClientUsage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.ClientUsage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.ClientUsage}
 */
proto.msg.ClientUsage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setYear(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMonth(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDay(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setForegroundtime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAvgresponsetime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalrequests(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReceivedmessages(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSentmessages(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReceivedmedia(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSentmedia(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUploadbytes(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDownloadbytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.ClientUsage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.ClientUsage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.ClientUsage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.ClientUsage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getYear();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMonth();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDay();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getForegroundtime();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getAvgresponsetime();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getTotalrequests();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getReceivedmessages();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getSentmessages();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getReceivedmedia();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getSentmedia();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getUploadbytes();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getDownloadbytes();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
};


/**
 * optional int32 Year = 1;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getYear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setYear = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 Month = 2;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getMonth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setMonth = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 Day = 3;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setDay = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 UserID = 4;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setUserid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 ForegroundTime = 5;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getForegroundtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setForegroundtime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 AvgResponseTime = 6;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getAvgresponsetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setAvgresponsetime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 TotalRequests = 7;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getTotalrequests = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setTotalrequests = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 ReceivedMessages = 8;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getReceivedmessages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setReceivedmessages = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 SentMessages = 9;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getSentmessages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setSentmessages = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 ReceivedMedia = 10;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getReceivedmedia = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setReceivedmedia = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 SentMedia = 11;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getSentmedia = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setSentmedia = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 UploadBytes = 12;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getUploadbytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setUploadbytes = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 DownloadBytes = 13;
 * @return {number}
 */
proto.msg.ClientUsage.prototype.getDownloadbytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.ClientUsage} returns this
 */
proto.msg.ClientUsage.prototype.setDownloadbytes = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.SystemConfig.repeatedFields_ = [13,18];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    gifbot: jspb.Message.getFieldWithDefault(msg, 110, ""),
    wikibot: jspb.Message.getFieldWithDefault(msg, 111, ""),
    testmode: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    phonecallenabled: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    expireon: jspb.Message.getFieldWithDefault(msg, 3, 0),
    groupmaxsize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    forwardedmaxcount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    onlineupdateperiodinsec: jspb.Message.getFieldWithDefault(msg, 6, 0),
    edittimelimitinsec: jspb.Message.getFieldWithDefault(msg, 7, 0),
    revoketimelimitinsec: jspb.Message.getFieldWithDefault(msg, 8, 0),
    pinneddialogsmaxcount: jspb.Message.getFieldWithDefault(msg, 9, 0),
    urlprefix: jspb.Message.getFieldWithDefault(msg, 10, 0),
    messagemaxlength: jspb.Message.getFieldWithDefault(msg, 11, 0),
    captionmaxlength: jspb.Message.getFieldWithDefault(msg, 12, 0),
    dcsList: jspb.Message.toObjectList(msg.getDcsList(),
    proto.msg.DataCenter.toObject, includeInstance),
    maxlabels: jspb.Message.getFieldWithDefault(msg, 14, 0),
    toppeerdecayrate: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    toppeermaxstep: jspb.Message.getFloatingPointFieldWithDefault(msg, 16, 0.0),
    maxactivesessions: jspb.Message.getFieldWithDefault(msg, 17, 0),
    reactionsList: (f = jspb.Message.getRepeatedField(msg, 18)) == null ? undefined : f,
    maxuploadsize: jspb.Message.getFieldWithDefault(msg, 19, 0),
    maxuploadpartsize: jspb.Message.getFieldWithDefault(msg, 20, 0),
    maxuploadparts: jspb.Message.getFieldWithDefault(msg, 21, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemConfig}
 */
proto.msg.SystemConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemConfig;
  return proto.msg.SystemConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemConfig}
 */
proto.msg.SystemConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 110:
      var value = /** @type {string} */ (reader.readString());
      msg.setGifbot(value);
      break;
    case 111:
      var value = /** @type {string} */ (reader.readString());
      msg.setWikibot(value);
      break;
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTestmode(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPhonecallenabled(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpireon(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGroupmaxsize(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setForwardedmaxcount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOnlineupdateperiodinsec(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEdittimelimitinsec(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRevoketimelimitinsec(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPinneddialogsmaxcount(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUrlprefix(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMessagemaxlength(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCaptionmaxlength(value);
      break;
    case 13:
      var value = new proto.msg.DataCenter;
      reader.readMessage(value,proto.msg.DataCenter.deserializeBinaryFromReader);
      msg.addDcs(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxlabels(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setToppeerdecayrate(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setToppeermaxstep(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxactivesessions(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.addReactions(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxuploadsize(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxuploadpartsize(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxuploadparts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGifbot();
  if (f.length > 0) {
    writer.writeString(
      110,
      f
    );
  }
  f = message.getWikibot();
  if (f.length > 0) {
    writer.writeString(
      111,
      f
    );
  }
  f = message.getTestmode();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPhonecallenabled();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getExpireon();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getGroupmaxsize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getForwardedmaxcount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getOnlineupdateperiodinsec();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getEdittimelimitinsec();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getRevoketimelimitinsec();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getPinneddialogsmaxcount();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getUrlprefix();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getMessagemaxlength();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getCaptionmaxlength();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getDcsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.msg.DataCenter.serializeBinaryToWriter
    );
  }
  f = message.getMaxlabels();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getToppeerdecayrate();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = message.getToppeermaxstep();
  if (f !== 0.0) {
    writer.writeFloat(
      16,
      f
    );
  }
  f = message.getMaxactivesessions();
  if (f !== 0) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = message.getReactionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      18,
      f
    );
  }
  f = message.getMaxuploadsize();
  if (f !== 0) {
    writer.writeInt64(
      19,
      f
    );
  }
  f = message.getMaxuploadpartsize();
  if (f !== 0) {
    writer.writeInt64(
      20,
      f
    );
  }
  f = message.getMaxuploadparts();
  if (f !== 0) {
    writer.writeInt64(
      21,
      f
    );
  }
};


/**
 * optional string GifBot = 110;
 * @return {string}
 */
proto.msg.SystemConfig.prototype.getGifbot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 110, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setGifbot = function(value) {
  return jspb.Message.setProto3StringField(this, 110, value);
};


/**
 * optional string WikiBot = 111;
 * @return {string}
 */
proto.msg.SystemConfig.prototype.getWikibot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 111, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setWikibot = function(value) {
  return jspb.Message.setProto3StringField(this, 111, value);
};


/**
 * optional bool TestMode = 1;
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.getTestmode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setTestmode = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool PhoneCallEnabled = 2;
 * @return {boolean}
 */
proto.msg.SystemConfig.prototype.getPhonecallenabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setPhonecallenabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int64 ExpireOn = 3;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getExpireon = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setExpireon = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 GroupMaxSize = 4;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getGroupmaxsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setGroupmaxsize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 ForwardedMaxCount = 5;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getForwardedmaxcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setForwardedmaxcount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 OnlineUpdatePeriodInSec = 6;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getOnlineupdateperiodinsec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setOnlineupdateperiodinsec = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 EditTimeLimitInSec = 7;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getEdittimelimitinsec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setEdittimelimitinsec = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 RevokeTimeLimitInSec = 8;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getRevoketimelimitinsec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setRevoketimelimitinsec = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 PinnedDialogsMaxCount = 9;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getPinneddialogsmaxcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setPinneddialogsmaxcount = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 UrlPrefix = 10;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getUrlprefix = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setUrlprefix = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 MessageMaxLength = 11;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getMessagemaxlength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setMessagemaxlength = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 CaptionMaxLength = 12;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getCaptionmaxlength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setCaptionmaxlength = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * repeated DataCenter DCs = 13;
 * @return {!Array<!proto.msg.DataCenter>}
 */
proto.msg.SystemConfig.prototype.getDcsList = function() {
  return /** @type{!Array<!proto.msg.DataCenter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msg.DataCenter, 13));
};


/**
 * @param {!Array<!proto.msg.DataCenter>} value
 * @return {!proto.msg.SystemConfig} returns this
*/
proto.msg.SystemConfig.prototype.setDcsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.msg.DataCenter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.DataCenter}
 */
proto.msg.SystemConfig.prototype.addDcs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.msg.DataCenter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearDcsList = function() {
  return this.setDcsList([]);
};


/**
 * optional int32 MaxLabels = 14;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getMaxlabels = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setMaxlabels = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional float TopPeerDecayRate = 15;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getToppeerdecayrate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setToppeerdecayrate = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional float TopPeerMaxStep = 16;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getToppeermaxstep = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setToppeermaxstep = function(value) {
  return jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional uint32 MaxActiveSessions = 17;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getMaxactivesessions = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setMaxactivesessions = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * repeated string Reactions = 18;
 * @return {!Array<string>}
 */
proto.msg.SystemConfig.prototype.getReactionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 18));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setReactionsList = function(value) {
  return jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.addReactions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.clearReactionsList = function() {
  return this.setReactionsList([]);
};


/**
 * optional int64 MaxUploadSize = 19;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getMaxuploadsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setMaxuploadsize = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int64 MaxUploadPartSize = 20;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getMaxuploadpartsize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setMaxuploadpartsize = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int64 MaxUploadParts = 21;
 * @return {number}
 */
proto.msg.SystemConfig.prototype.getMaxuploadparts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemConfig} returns this
 */
proto.msg.SystemConfig.prototype.setMaxuploadparts = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.DataCenter.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.DataCenter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.DataCenter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.DataCenter.toObject = function(includeInstance, msg) {
  var f, obj = {
    ip: jspb.Message.getFieldWithDefault(msg, 1, ""),
    port: jspb.Message.getFieldWithDefault(msg, 2, 0),
    http: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    websocket: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    quic: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.DataCenter}
 */
proto.msg.DataCenter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.DataCenter;
  return proto.msg.DataCenter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.DataCenter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.DataCenter}
 */
proto.msg.DataCenter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHttp(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWebsocket(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQuic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.DataCenter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.DataCenter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.DataCenter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.DataCenter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getHttp();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getWebsocket();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getQuic();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string IP = 1;
 * @return {string}
 */
proto.msg.DataCenter.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.DataCenter} returns this
 */
proto.msg.DataCenter.prototype.setIp = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 Port = 2;
 * @return {number}
 */
proto.msg.DataCenter.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.DataCenter} returns this
 */
proto.msg.DataCenter.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool Http = 3;
 * @return {boolean}
 */
proto.msg.DataCenter.prototype.getHttp = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.DataCenter} returns this
 */
proto.msg.DataCenter.prototype.setHttp = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool Websocket = 4;
 * @return {boolean}
 */
proto.msg.DataCenter.prototype.getWebsocket = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.DataCenter} returns this
 */
proto.msg.DataCenter.prototype.setWebsocket = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool Quic = 5;
 * @return {boolean}
 */
proto.msg.DataCenter.prototype.getQuic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.DataCenter} returns this
 */
proto.msg.DataCenter.prototype.setQuic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.SystemSalts.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemSalts.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemSalts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemSalts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemSalts.toObject = function(includeInstance, msg) {
  var f, obj = {
    saltsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    startsfrom: jspb.Message.getFieldWithDefault(msg, 2, 0),
    duration: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemSalts}
 */
proto.msg.SystemSalts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemSalts;
  return proto.msg.SystemSalts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemSalts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemSalts}
 */
proto.msg.SystemSalts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setSaltsList(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartsfrom(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemSalts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemSalts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemSalts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemSalts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSaltsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
  f = message.getStartsfrom();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * repeated int64 Salts = 1;
 * @return {!Array<number>}
 */
proto.msg.SystemSalts.prototype.getSaltsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.msg.SystemSalts} returns this
 */
proto.msg.SystemSalts.prototype.setSaltsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.msg.SystemSalts} returns this
 */
proto.msg.SystemSalts.prototype.addSalts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.SystemSalts} returns this
 */
proto.msg.SystemSalts.prototype.clearSaltsList = function() {
  return this.setSaltsList([]);
};


/**
 * optional int64 StartsFrom = 2;
 * @return {number}
 */
proto.msg.SystemSalts.prototype.getStartsfrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemSalts} returns this
 */
proto.msg.SystemSalts.prototype.setStartsfrom = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 Duration = 3;
 * @return {number}
 */
proto.msg.SystemSalts.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemSalts} returns this
 */
proto.msg.SystemSalts.prototype.setDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.AppUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.AppUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.AppUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.AppUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    available: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    mandatory: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    identifier: jspb.Message.getFieldWithDefault(msg, 3, ""),
    versionname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    downloadurl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    displayinterval: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.AppUpdate}
 */
proto.msg.AppUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.AppUpdate;
  return proto.msg.AppUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.AppUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.AppUpdate}
 */
proto.msg.AppUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAvailable(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMandatory(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersionname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDownloadurl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDisplayinterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.AppUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.AppUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.AppUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.AppUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAvailable();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMandatory();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIdentifier();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVersionname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDownloadurl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDisplayinterval();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional bool Available = 1;
 * @return {boolean}
 */
proto.msg.AppUpdate.prototype.getAvailable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.setAvailable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool Mandatory = 2;
 * @return {boolean}
 */
proto.msg.AppUpdate.prototype.getMandatory = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.setMandatory = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string Identifier = 3;
 * @return {string}
 */
proto.msg.AppUpdate.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.setIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string VersionName = 4;
 * @return {string}
 */
proto.msg.AppUpdate.prototype.getVersionname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.setVersionname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string DownloadUrl = 5;
 * @return {string}
 */
proto.msg.AppUpdate.prototype.getDownloadurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.setDownloadurl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string Description = 6;
 * @return {string}
 */
proto.msg.AppUpdate.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 DisplayInterval = 7;
 * @return {number}
 */
proto.msg.AppUpdate.prototype.getDisplayinterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.AppUpdate} returns this
 */
proto.msg.AppUpdate.prototype.setDisplayinterval = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    workgroupname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bigphotourl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    smallphotourl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    storageurl: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemInfo}
 */
proto.msg.SystemInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemInfo;
  return proto.msg.SystemInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemInfo}
 */
proto.msg.SystemInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkgroupname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBigphotourl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSmallphotourl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStorageurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkgroupname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBigphotourl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSmallphotourl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStorageurl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string WorkGroupName = 1;
 * @return {string}
 */
proto.msg.SystemInfo.prototype.getWorkgroupname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.SystemInfo} returns this
 */
proto.msg.SystemInfo.prototype.setWorkgroupname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BigPhotoUrl = 2;
 * @return {string}
 */
proto.msg.SystemInfo.prototype.getBigphotourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.SystemInfo} returns this
 */
proto.msg.SystemInfo.prototype.setBigphotourl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string SmallPhotoUrl = 3;
 * @return {string}
 */
proto.msg.SystemInfo.prototype.getSmallphotourl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.SystemInfo} returns this
 */
proto.msg.SystemInfo.prototype.setSmallphotourl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string StorageUrl = 4;
 * @return {string}
 */
proto.msg.SystemInfo.prototype.getStorageurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg.SystemInfo} returns this
 */
proto.msg.SystemInfo.prototype.setStorageurl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemServerTime.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemServerTime.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemServerTime} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemServerTime.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemServerTime}
 */
proto.msg.SystemServerTime.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemServerTime;
  return proto.msg.SystemServerTime.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemServerTime} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemServerTime}
 */
proto.msg.SystemServerTime.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemServerTime.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemServerTime.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemServerTime} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemServerTime.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 Timestamp = 1;
 * @return {number}
 */
proto.msg.SystemServerTime.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg.SystemServerTime} returns this
 */
proto.msg.SystemServerTime.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg.SystemKeys.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg.SystemKeys.prototype.toObject = function(opt_includeInstance) {
  return proto.msg.SystemKeys.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg.SystemKeys} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemKeys.toObject = function(includeInstance, msg) {
  var f, obj = {
    rsapublickeysList: jspb.Message.toObjectList(msg.getRsapublickeysList(),
    core_types_pb.RSAPublicKey.toObject, includeInstance),
    dhgroupsList: jspb.Message.toObjectList(msg.getDhgroupsList(),
    core_types_pb.DHGroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg.SystemKeys}
 */
proto.msg.SystemKeys.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg.SystemKeys;
  return proto.msg.SystemKeys.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg.SystemKeys} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg.SystemKeys}
 */
proto.msg.SystemKeys.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new core_types_pb.RSAPublicKey;
      reader.readMessage(value,core_types_pb.RSAPublicKey.deserializeBinaryFromReader);
      msg.addRsapublickeys(value);
      break;
    case 2:
      var value = new core_types_pb.DHGroup;
      reader.readMessage(value,core_types_pb.DHGroup.deserializeBinaryFromReader);
      msg.addDhgroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg.SystemKeys.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg.SystemKeys.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg.SystemKeys} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg.SystemKeys.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRsapublickeysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      core_types_pb.RSAPublicKey.serializeBinaryToWriter
    );
  }
  f = message.getDhgroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      core_types_pb.DHGroup.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RSAPublicKey RSAPublicKeys = 1;
 * @return {!Array<!proto.msg.RSAPublicKey>}
 */
proto.msg.SystemKeys.prototype.getRsapublickeysList = function() {
  return /** @type{!Array<!proto.msg.RSAPublicKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.RSAPublicKey, 1));
};


/**
 * @param {!Array<!proto.msg.RSAPublicKey>} value
 * @return {!proto.msg.SystemKeys} returns this
*/
proto.msg.SystemKeys.prototype.setRsapublickeysList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.msg.RSAPublicKey=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.RSAPublicKey}
 */
proto.msg.SystemKeys.prototype.addRsapublickeys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.msg.RSAPublicKey, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.SystemKeys} returns this
 */
proto.msg.SystemKeys.prototype.clearRsapublickeysList = function() {
  return this.setRsapublickeysList([]);
};


/**
 * repeated DHGroup DHGroups = 2;
 * @return {!Array<!proto.msg.DHGroup>}
 */
proto.msg.SystemKeys.prototype.getDhgroupsList = function() {
  return /** @type{!Array<!proto.msg.DHGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, core_types_pb.DHGroup, 2));
};


/**
 * @param {!Array<!proto.msg.DHGroup>} value
 * @return {!proto.msg.SystemKeys} returns this
*/
proto.msg.SystemKeys.prototype.setDhgroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.msg.DHGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg.DHGroup}
 */
proto.msg.SystemKeys.prototype.addDhgroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.msg.DHGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg.SystemKeys} returns this
 */
proto.msg.SystemKeys.prototype.clearDhgroupsList = function() {
  return this.setDhgroupsList([]);
};


goog.object.extend(exports, proto.msg);
